// Auto generated by UnrealTcc. 

#include "TcrTreeMidPalm.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrTreeSkinGrowth.h"
#include "TcrFernSubbranches.h"
#include "TcrTreeLeafScatter.h"
#include "TcrSimpleFruit.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeMidPalm::UTcrTreeMidPalm() 
{
}
FTccNodePtr UTcrTreeMidPalm::CreateNode() 
{
	TSharedPtr<FTcrTreeMidPalm> Node = MakeShared<FTcrTreeMidPalm>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeMidPalm::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeMidPalm> Node = StaticCastSharedPtr<FTcrTreeMidPalm>(InNode);
	Node->Yaw = Yaw;
}

 FTcrTreeMidPalm::FTcrTreeMidPalm() 
{
	InitInputsCount(0);
	main_trunk = new FTcrTreeTrunkGrowth();
	main_trunk->InitMultiRefs(true); // RefCount = 3
	tcr_tree_skin_growth1 = new FTcrTreeSkinGrowth();
	tcr_tree_skin_growth1->InitMultiRefs(false); // RefCount = 1
	mi_trunk = new FTccUnrealMaterial();
	mi_trunk->InitMultiRefs(false); // RefCount = 1
	tcc_pack1 = new FTccPack();
	tcc_pack1->InitMultiRefs(false); // RefCount = 1
	subbranch1 = new FTcrFernSubbranches();
	subbranch1->InitMultiRefs(false); // RefCount = 1
	instance_id1 = new FTccVex();
	instance_id1->InitMultiRefs(false); // RefCount = 1
	subbranch2 = new FTcrFernSubbranches();
	subbranch2->InitMultiRefs(false); // RefCount = 1
	instance_id2 = new FTccVex();
	instance_id2->InitMultiRefs(false); // RefCount = 1
	subbranch3 = new FTcrFernSubbranches();
	subbranch3->InitMultiRefs(false); // RefCount = 1
	instance_id3 = new FTccVex();
	instance_id3->InitMultiRefs(false); // RefCount = 1
	tcc_merge2 = new FTccMerge();
	tcc_merge2->InitMultiRefs(false); // RefCount = 1
	subbranch_scatter = new FTcrTreeLeafScatter();
	subbranch_scatter->InitMultiRefs(false); // RefCount = 1
	tcr_simple_fruit1 = new FTcrSimpleFruit();
	tcr_simple_fruit1->InitMultiRefs(false); // RefCount = 1
	mi_fruit = new FTccUnrealMaterial();
	mi_fruit->InitMultiRefs(false); // RefCount = 1
	fruit_scatter = new FTcrTreeLeafScatter();
	fruit_scatter->InitMultiRefs(false); // RefCount = 1
	tcc_merge1 = new FTccMerge();
	tcc_merge1->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeMidPalm::~FTcrTreeMidPalm() 
{
	delete main_trunk; 
	delete tcr_tree_skin_growth1; 
	delete mi_trunk; 
	delete tcc_pack1; 
	delete subbranch1; 
	delete instance_id1; 
	delete subbranch2; 
	delete instance_id2; 
	delete subbranch3; 
	delete instance_id3; 
	delete tcc_merge2; 
	delete subbranch_scatter; 
	delete tcr_simple_fruit1; 
	delete mi_fruit; 
	delete fruit_scatter; 
	delete tcc_merge1; 
}
void FTcrTreeMidPalm::Cook() 
{
	{
		// Node: main_trunk
		main_trunk->RadiusShape = ETccRampInterp::Bezier;
		main_trunk->RadiusShape.ResizeRampPoints(3);
		main_trunk->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		main_trunk->RadiusShape.AddRampPoint(0.1500f, 0.5000f);
		main_trunk->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		main_trunk->TreeAge = 8.700000f;
		main_trunk->MaxAge = 4.410000f;
		main_trunk->SegLen = 0.010000f;
		main_trunk->Radius = 0.180000f;
		main_trunk->CurlForce = 0.181000f;
		main_trunk->CurlFreq = 0.355000f;
		main_trunk->Cook();
	}
	{
		// Node: tcr_tree_skin_growth1
		tcr_tree_skin_growth1->SetInput(0, main_trunk);
		tcr_tree_skin_growth1->Cols = 12;
		tcr_tree_skin_growth1->Noise = UTcrTreeSkinGrowth::Worley;
		tcr_tree_skin_growth1->Amp = 0.053000f;
		tcr_tree_skin_growth1->Freq = FVector3f(0.000000f, 0.000000f, 6.400000f);
		tcr_tree_skin_growth1->Cook();
	}
	{
		// Node: mi_trunk
		mi_trunk->SetInput(0, tcr_tree_skin_growth1);
		mi_trunk->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Trunk.MI_TreeBig_Trunk");
		mi_trunk->Cook();
	}
	{
		// Node: tcc_pack1
		tcc_pack1->SetInput(0, mi_trunk);
		tcc_pack1->GeoName = TEXT("tree_trunk");
		tcc_pack1->Cook();
	}
	{
		// Node: subbranch1
		subbranch1->RadiusShape = ETccRampInterp::Bezier;
		subbranch1->RadiusShape.ResizeRampPoints(3);
		subbranch1->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		subbranch1->RadiusShape.AddRampPoint(0.1552f, 0.4583f);
		subbranch1->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		subbranch1->Shape = ETccRampInterp::Linear;
		subbranch1->Shape.ResizeRampPoints(7);
		subbranch1->Shape.AddRampPoint(0.0000f, 0.0909f);
		subbranch1->Shape.AddRampPoint(0.0556f, 0.6809f);
		subbranch1->Shape.AddRampPoint(0.1997f, 1.0000f);
		subbranch1->Shape.AddRampPoint(0.3110f, 1.0000f);
		subbranch1->Shape.AddRampPoint(0.6039f, 0.9149f);
		subbranch1->Shape.AddRampPoint(0.8527f, 0.7234f);
		subbranch1->Shape.AddRampPoint(1.0000f, 0.0000f);
		subbranch1->ScaleRamp = ETccRampInterp::Linear;
		subbranch1->ScaleRamp.ResizeRampPoints(6);
		subbranch1->ScaleRamp.AddRampPoint(0.0000f, 0.2333f);
		subbranch1->ScaleRamp.AddRampPoint(0.1391f, 0.8667f);
		subbranch1->ScaleRamp.AddRampPoint(0.3519f, 1.0000f);
		subbranch1->ScaleRamp.AddRampPoint(0.5941f, 1.0000f);
		subbranch1->ScaleRamp.AddRampPoint(0.7971f, 0.8333f);
		subbranch1->ScaleRamp.AddRampPoint(1.0000f, 0.3000f);
		subbranch1->Gseed = 208;
		subbranch1->TreeAge = 3.960000f;
		subbranch1->PitchLerpRange = FVector2f(0.000000f, 3.190000f);
		subbranch1->Radius = 0.074000f;
		subbranch1->Size = FVector2f(0.060000f, 0.744000f);
		subbranch1->Rows = 19;
		subbranch1->Stem = 0.047000f;
		subbranch1->Bend = -18.500000f;
		subbranch1->Curl = 0.000000f;
		subbranch1->StartPercent = 0.143000f;
		subbranch1->AgeDis = 0.100000f;
		subbranch1->Yaw = FVector2f(16.000000f, -85.000000f);
		subbranch1->ScaleShowAdv = 1;
		subbranch1->Cook();
	}
	{
		// Node: instance_id1
		instance_id1->SetInput(0, subbranch1);
		instance_id1->Cook();
		{
			FTccGeometryPtr Geo0 = instance_id1->GetGeoRef(0);
			FTccAttribPtr attr_instance_id = Geo0->AddPackedGeoAttrib("instance_id", ETccAttribType::I);
			const int32 _numpacked = Geo0->GetNumPackedGeos();
			for(int32 i = 0; i < _numpacked; i++)
			{
				const int32 _packednum = i;
				int32& _instance_id = attr_instance_id->GetData<int32>()[i];
				_instance_id = 0;
			}
		}
	}
	{
		// Node: subbranch2
		subbranch2->RadiusShape = ETccRampInterp::Bezier;
		subbranch2->RadiusShape.ResizeRampPoints(3);
		subbranch2->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		subbranch2->RadiusShape.AddRampPoint(0.1552f, 0.4583f);
		subbranch2->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		subbranch2->Shape = ETccRampInterp::Linear;
		subbranch2->Shape.ResizeRampPoints(7);
		subbranch2->Shape.AddRampPoint(0.0000f, 0.0909f);
		subbranch2->Shape.AddRampPoint(0.0556f, 0.6809f);
		subbranch2->Shape.AddRampPoint(0.1997f, 1.0000f);
		subbranch2->Shape.AddRampPoint(0.3110f, 1.0000f);
		subbranch2->Shape.AddRampPoint(0.6039f, 0.9149f);
		subbranch2->Shape.AddRampPoint(0.8527f, 0.7234f);
		subbranch2->Shape.AddRampPoint(1.0000f, 0.0000f);
		subbranch2->ScaleRamp = ETccRampInterp::Linear;
		subbranch2->ScaleRamp.ResizeRampPoints(6);
		subbranch2->ScaleRamp.AddRampPoint(0.0000f, 0.2333f);
		subbranch2->ScaleRamp.AddRampPoint(0.1391f, 0.8667f);
		subbranch2->ScaleRamp.AddRampPoint(0.3519f, 1.0000f);
		subbranch2->ScaleRamp.AddRampPoint(0.5941f, 1.0000f);
		subbranch2->ScaleRamp.AddRampPoint(0.7921f, 0.7000f);
		subbranch2->ScaleRamp.AddRampPoint(1.0000f, 0.3000f);
		subbranch2->Gseed = 71;
		subbranch2->TreeAge = 3.960000f;
		subbranch2->PitchLerpRange = FVector2f(0.000000f, 3.190000f);
		subbranch2->Radius = 0.074000f;
		subbranch2->Size = FVector2f(0.060000f, 0.744000f);
		subbranch2->Rows = 19;
		subbranch2->Stem = 0.047000f;
		subbranch2->Bend = -18.500000f;
		subbranch2->Curl = 0.000000f;
		subbranch2->StartPercent = 0.143000f;
		subbranch2->AgeDis = 0.100000f;
		subbranch2->Yaw = FVector2f(16.000000f, -85.000000f);
		subbranch2->PitchR = 5.500000f;
		subbranch2->Scale = 1.284000f;
		subbranch2->ScaleShowAdv = 1;
		subbranch2->Cook();
	}
	{
		// Node: instance_id2
		instance_id2->SetInput(0, subbranch2);
		instance_id2->Cook();
		{
			FTccGeometryPtr Geo0 = instance_id2->GetGeoRef(0);
			FTccAttribPtr attr_instance_id = Geo0->AddPackedGeoAttrib("instance_id", ETccAttribType::I);
			const int32 _numpacked = Geo0->GetNumPackedGeos();
			for(int32 i = 0; i < _numpacked; i++)
			{
				const int32 _packednum = i;
				int32& _instance_id = attr_instance_id->GetData<int32>()[i];
				_instance_id = 1;
			}
		}
	}
	{
		// Node: subbranch3
		subbranch3->RadiusShape = ETccRampInterp::Bezier;
		subbranch3->RadiusShape.ResizeRampPoints(3);
		subbranch3->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		subbranch3->RadiusShape.AddRampPoint(0.1552f, 0.4583f);
		subbranch3->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		subbranch3->Shape = ETccRampInterp::Linear;
		subbranch3->Shape.ResizeRampPoints(7);
		subbranch3->Shape.AddRampPoint(0.0000f, 0.0909f);
		subbranch3->Shape.AddRampPoint(0.0556f, 0.6809f);
		subbranch3->Shape.AddRampPoint(0.1997f, 1.0000f);
		subbranch3->Shape.AddRampPoint(0.3110f, 1.0000f);
		subbranch3->Shape.AddRampPoint(0.6039f, 0.9149f);
		subbranch3->Shape.AddRampPoint(0.8527f, 0.7234f);
		subbranch3->Shape.AddRampPoint(1.0000f, 0.0000f);
		subbranch3->ScaleRamp = ETccRampInterp::Linear;
		subbranch3->ScaleRamp.ResizeRampPoints(6);
		subbranch3->ScaleRamp.AddRampPoint(0.0000f, 0.2333f);
		subbranch3->ScaleRamp.AddRampPoint(0.1391f, 0.8667f);
		subbranch3->ScaleRamp.AddRampPoint(0.3519f, 1.0000f);
		subbranch3->ScaleRamp.AddRampPoint(0.5941f, 1.0000f);
		subbranch3->ScaleRamp.AddRampPoint(0.7987f, 0.8000f);
		subbranch3->ScaleRamp.AddRampPoint(1.0000f, 0.3000f);
		subbranch3->Gseed = 93;
		subbranch3->TreeAge = 3.960000f;
		subbranch3->PitchLerpRange = FVector2f(0.000000f, 3.190000f);
		subbranch3->Radius = 0.074000f;
		subbranch3->Size = FVector2f(0.060000f, 0.744000f);
		subbranch3->Rows = 19;
		subbranch3->Stem = 0.047000f;
		subbranch3->Bend = -18.500000f;
		subbranch3->Curl = 0.000000f;
		subbranch3->StartPercent = 0.143000f;
		subbranch3->AgeDis = 0.100000f;
		subbranch3->DropR = 0.197000f;
		subbranch3->Yaw = FVector2f(16.000000f, -85.000000f);
		subbranch3->PitchR = 5.500000f;
		subbranch3->Scale = 1.284000f;
		subbranch3->ScaleShowAdv = 1;
		subbranch3->Cook();
	}
	{
		// Node: instance_id3
		instance_id3->SetInput(0, subbranch3);
		instance_id3->Cook();
		{
			FTccGeometryPtr Geo0 = instance_id3->GetGeoRef(0);
			FTccAttribPtr attr_instance_id = Geo0->AddPackedGeoAttrib("instance_id", ETccAttribType::I);
			const int32 _numpacked = Geo0->GetNumPackedGeos();
			for(int32 i = 0; i < _numpacked; i++)
			{
				const int32 _packednum = i;
				int32& _instance_id = attr_instance_id->GetData<int32>()[i];
				_instance_id = 2;
			}
		}
	}
	{
		// Node: tcc_merge2
		tcc_merge2->SetInput(0, instance_id1);
		tcc_merge2->SetInput(1, instance_id2);
		tcc_merge2->SetInput(2, instance_id3);
		tcc_merge2->Cook();
	}
	{
		// Node: subbranch_scatter
		subbranch_scatter->SetInput(0, main_trunk);
		subbranch_scatter->SetInput(1, tcc_merge2);
		subbranch_scatter->StartPercentRamp = ETccRampInterp::Linear;
		subbranch_scatter->StartPercentRamp.ResizeRampPoints(2);
		subbranch_scatter->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		subbranch_scatter->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		subbranch_scatter->AgeDisRamp = ETccRampInterp::Linear;
		subbranch_scatter->AgeDisRamp.ResizeRampPoints(2);
		subbranch_scatter->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		subbranch_scatter->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		subbranch_scatter->YawRamp = ETccRampInterp::Linear;
		subbranch_scatter->YawRamp.ResizeRampPoints(2);
		subbranch_scatter->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		subbranch_scatter->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		subbranch_scatter->PitchRemap = ETccRampInterp::Linear;
		subbranch_scatter->PitchRemap.ResizeRampPoints(2);
		subbranch_scatter->PitchRemap.AddRampPoint(0.0000f, 1.0000f);
		subbranch_scatter->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		subbranch_scatter->PitchAlongTrunk = ETccRampInterp::Linear;
		subbranch_scatter->PitchAlongTrunk.ResizeRampPoints(2);
		subbranch_scatter->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		subbranch_scatter->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		subbranch_scatter->ScaleAlongBranch = ETccRampInterp::Linear;
		subbranch_scatter->ScaleAlongBranch.ResizeRampPoints(3);
		subbranch_scatter->ScaleAlongBranch.AddRampPoint(0.0000f, 0.6670f);
		subbranch_scatter->ScaleAlongBranch.AddRampPoint(0.4400f, 1.0000f);
		subbranch_scatter->ScaleAlongBranch.AddRampPoint(1.0000f, 0.7000f);
		subbranch_scatter->ScaleAlongTrunk = ETccRampInterp::Linear;
		subbranch_scatter->ScaleAlongTrunk.ResizeRampPoints(2);
		subbranch_scatter->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		subbranch_scatter->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		subbranch_scatter->Gseed = 4;
		subbranch_scatter->StartPercent = 0.803000f;
		subbranch_scatter->AgeDis = 0.059000f;
		subbranch_scatter->RadiusShrink = 0.439000f;
		subbranch_scatter->UseInstanceId = 1;
		subbranch_scatter->Method = UTcrTreeLeafScatter::AroundBranch;
		subbranch_scatter->PitchRange = FVector2f(-40.000000f, 15.000000f);
		subbranch_scatter->Scale = 0.683000f;
		subbranch_scatter->ScaleShowAdv = 1;
		subbranch_scatter->Cook();
	}
	{
		// Node: tcr_simple_fruit1
		tcr_simple_fruit1->Shape = ETccRampInterp::Linear;
		tcr_simple_fruit1->Shape.ResizeRampPoints(9);
		tcr_simple_fruit1->Shape.AddRampPoint(0.0000f, 0.1250f);
		tcr_simple_fruit1->Shape.AddRampPoint(0.0544f, 0.7083f);
		tcr_simple_fruit1->Shape.AddRampPoint(0.1136f, 0.8542f);
		tcr_simple_fruit1->Shape.AddRampPoint(0.3072f, 0.9792f);
		tcr_simple_fruit1->Shape.AddRampPoint(0.5168f, 0.9792f);
		tcr_simple_fruit1->Shape.AddRampPoint(0.6768f, 0.8750f);
		tcr_simple_fruit1->Shape.AddRampPoint(0.7984f, 0.6250f);
		tcr_simple_fruit1->Shape.AddRampPoint(0.9248f, 0.1458f);
		tcr_simple_fruit1->Shape.AddRampPoint(1.0000f, 0.0000f);
		tcr_simple_fruit1->Bend = -51.099998f;
		tcr_simple_fruit1->Cols = 12;
		tcr_simple_fruit1->Stem = 0.315000f;
		tcr_simple_fruit1->Cook();
	}
	{
		// Node: mi_fruit
		mi_fruit->SetInput(0, tcr_simple_fruit1);
		mi_fruit->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Trunk.MI_TreeBig_Trunk");
		mi_fruit->Cook();
	}
	{
		// Node: fruit_scatter
		fruit_scatter->SetInput(0, main_trunk);
		fruit_scatter->SetInput(1, mi_fruit);
		fruit_scatter->StartPercentRamp = ETccRampInterp::Linear;
		fruit_scatter->StartPercentRamp.ResizeRampPoints(2);
		fruit_scatter->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		fruit_scatter->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		fruit_scatter->AgeDisRamp = ETccRampInterp::Linear;
		fruit_scatter->AgeDisRamp.ResizeRampPoints(2);
		fruit_scatter->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		fruit_scatter->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		fruit_scatter->YawRamp = ETccRampInterp::Linear;
		fruit_scatter->YawRamp.ResizeRampPoints(2);
		fruit_scatter->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		fruit_scatter->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		fruit_scatter->PitchRemap = ETccRampInterp::Linear;
		fruit_scatter->PitchRemap.ResizeRampPoints(2);
		fruit_scatter->PitchRemap.AddRampPoint(0.0000f, 1.0000f);
		fruit_scatter->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		fruit_scatter->PitchAlongTrunk = ETccRampInterp::Linear;
		fruit_scatter->PitchAlongTrunk.ResizeRampPoints(2);
		fruit_scatter->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		fruit_scatter->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		fruit_scatter->ScaleAlongBranch = ETccRampInterp::Linear;
		fruit_scatter->ScaleAlongBranch.ResizeRampPoints(2);
		fruit_scatter->ScaleAlongBranch.AddRampPoint(0.0000f, 1.0000f);
		fruit_scatter->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		fruit_scatter->ScaleAlongTrunk = ETccRampInterp::Linear;
		fruit_scatter->ScaleAlongTrunk.ResizeRampPoints(2);
		fruit_scatter->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		fruit_scatter->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		fruit_scatter->MaxCount = 12;
		fruit_scatter->StartPercent = 0.881000f;
		fruit_scatter->AgeDis = 0.015000f;
		fruit_scatter->Method = UTcrTreeLeafScatter::AroundBranch;
		fruit_scatter->Scale = 0.193000f;
		fruit_scatter->ScaleShowAdv = 1;
		fruit_scatter->Cook();
	}
	{
		// Node: tcc_merge1
		tcc_merge1->SetInput(0, tcc_pack1);
		tcc_merge1->SetInput(1, subbranch_scatter);
		tcc_merge1->SetInput(2, fruit_scatter);
		tcc_merge1->Cook();
	}
	SetGeoResult(UTcrTreeMidPalm::output0, tcc_merge1->GetGeoResult(0));
}

