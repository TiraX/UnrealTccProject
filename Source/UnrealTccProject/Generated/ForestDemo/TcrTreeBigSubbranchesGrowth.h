// Auto generated by UnrealTcc. 

#pragma once

#include "CoreMinimal.h"
#include "TccNode.h"
#include "TccRecipeGeoDefine.h"
#include "TccRamp.h"
#include "TcrTreeBigSubbranchesGrowth.generated.h"

UCLASS()
class UNREALTCCPROJECT_API UTcrTreeBigSubbranchesGrowth : public UTccRecipeGeoDefine
{
	GENERATED_BODY()
public:
	enum EOutputs
	{
		output0,  // From tcc_merge1
		OUT_Count,
	};

	const FString SOutputs[OUT_Count] = 
	{
		TEXT("output0"),
	};

	UTcrTreeBigSubbranchesGrowth() ;

	virtual FTccNodePtr CreateNode() override;
	virtual void SyncParams(FTccNodePtr InNode) override;

	// Global Seed
	UPROPERTY(EditAnywhere)
	int32 Gseed = 0;

	// Yaw
	UPROPERTY(EditAnywhere)
	FVector2f Yaw = FVector2f(0.000000f, 720.000000f);

	// Rand
	UPROPERTY(EditAnywhere)
	float YawR = 0.441000f;

	// Pitch
	UPROPERTY(EditAnywhere)
	FVector2f Pitch = FVector2f(-3.600000f, -25.400000f);

	// Rand
	UPROPERTY(EditAnywhere)
	float PitchR = 0.752000f;

	// Roll
	UPROPERTY(EditAnywhere)
	float Roll = 0.000000f;

	// Yaw
	UPROPERTY(EditAnywhere)
	FVector2f Yaw2 = FVector2f(0.000000f, 0.000000f);

	// Rand
	UPROPERTY(EditAnywhere)
	float YawR2 = 0.000000f;

	// Pitch
	UPROPERTY(EditAnywhere)
	FVector2f Pitch2 = FVector2f(0.000000f, 0.000000f);

	// Rand
	UPROPERTY(EditAnywhere)
	float PitchR2 = 0.000000f;

};

class FTccVex;
class FTccPolyFrame;
class FTccCopyToPoint;
class FTccMerge;
class FTccPolyWire;
class FTcrTreeSimpleLeaf;
class FTccMeasure;
class FTccForBlock;
class FTccInstancer;
class FTccUnpack;
class UNREALTCCPROJECT_API FTcrTreeBigSubbranchesGrowth : public FTccNode
{
public:
	FTcrTreeBigSubbranchesGrowth() ;
	virtual ~FTcrTreeBigSubbranchesGrowth() ;

	virtual void Cook() override;

	// Global Seed
	int32 Gseed = 0;

	// Yaw
	FVector2f Yaw = FVector2f(0.000000f, 720.000000f);

	// Rand
	float YawR = 0.441000f;

	// Pitch
	FVector2f Pitch = FVector2f(-3.600000f, -25.400000f);

	// Rand
	float PitchR = 0.752000f;

	// Roll
	float Roll = 0.000000f;

	// Yaw
	FVector2f Yaw2 = FVector2f(0.000000f, 0.000000f);

	// Rand
	float YawR2 = 0.000000f;

	// Pitch
	FVector2f Pitch2 = FVector2f(0.000000f, 0.000000f);

	// Rand
	float PitchR2 = 0.000000f;

	FTccVex* line = nullptr;

	FTccPolyFrame* tcc_poly_frame1 = nullptr;

	FTccVex* scatter_branch = nullptr;

	FTccCopyToPoint* tcc_copy_to_point2 = nullptr;

	FTccMerge* tcc_merge2 = nullptr;

	FTccPolyWire* tcc_poly_wire1 = nullptr;

	FTcrTreeSimpleLeaf* tcr_tree_simple_leaf1 = nullptr;

	FTccMeasure* tcc_measure1 = nullptr;

	FTccForBlock* foreach_begin1 = nullptr;

	FTccPolyFrame* tcc_poly_frame2 = nullptr;

	FTccVex* scatter_leaves = nullptr;

	FTccInstancer* tcc_instancer1 = nullptr;

	FTccUnpack* tcc_unpack1 = nullptr;

	FTccMerge* tcc_merge1 = nullptr;

};

