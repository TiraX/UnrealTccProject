// Auto generated by UnrealTcc. 

#include "TcrAraceae01.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrBroadLeaf.h"
#include "TcrTreeLeafScatter.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrAraceae01::UTcrAraceae01() 
{
}
FTccNodePtr UTcrAraceae01::CreateNode() 
{
	TSharedPtr<FTcrAraceae01> Node = MakeShared<FTcrAraceae01>();
	SyncParams(Node);
	return Node;
}
void UTcrAraceae01::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrAraceae01> Node = StaticCastSharedPtr<FTcrAraceae01>(InNode);
}

 FTcrAraceae01::FTcrAraceae01() 
{
	InitInputsCount(0);
	trunk = new FTcrTreeTrunkGrowth();
	trunk->InitMultiRefs(false); // RefCount = 1
	leaf1 = new FTcrBroadLeaf();
	leaf1->InitMultiRefs(false); // RefCount = 1
	mi_leaf = new FTccUnrealMaterial();
	mi_leaf->InitMultiRefs(false); // RefCount = 1
	tcc_pack1 = new FTccPack();
	tcc_pack1->InitMultiRefs(false); // RefCount = 1
	leaf2 = new FTcrBroadLeaf();
	leaf2->InitMultiRefs(false); // RefCount = 1
	mi_leaf1 = new FTccUnrealMaterial();
	mi_leaf1->InitMultiRefs(false); // RefCount = 1
	tcc_pack2 = new FTccPack();
	tcc_pack2->InitMultiRefs(false); // RefCount = 1
	leaf3 = new FTcrBroadLeaf();
	leaf3->InitMultiRefs(false); // RefCount = 1
	mi_leaf2 = new FTccUnrealMaterial();
	mi_leaf2->InitMultiRefs(false); // RefCount = 1
	tcc_pack3 = new FTccPack();
	tcc_pack3->InitMultiRefs(false); // RefCount = 1
	tcc_merge1 = new FTccMerge();
	tcc_merge1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter1 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter1->InitMultiRefs(false); // RefCount = 1
}
 FTcrAraceae01::~FTcrAraceae01() 
{
	delete trunk; 
	delete leaf1; 
	delete mi_leaf; 
	delete tcc_pack1; 
	delete leaf2; 
	delete mi_leaf1; 
	delete tcc_pack2; 
	delete leaf3; 
	delete mi_leaf2; 
	delete tcc_pack3; 
	delete tcc_merge1; 
	delete tcr_tree_leaf_scatter1; 
}
void FTcrAraceae01::Cook() 
{
	{
		// Node: trunk
		trunk->RadiusShape = ETccRampInterp::Bezier;
		trunk->RadiusShape.ResizeRampPoints(3);
		trunk->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		trunk->RadiusShape.AddRampPoint(0.1500f, 0.5000f);
		trunk->RadiusShape.AddRampPoint(1.0000f, 0.5000f);
		trunk->MaxAge = 0.300000f;
		trunk->Radius = 0.040000f;
		trunk->Cook();
	}
	{
		// Node: leaf1
		leaf1->RadRamp = ETccRampInterp::Linear;
		leaf1->RadRamp.ResizeRampPoints(2);
		leaf1->RadRamp.AddRampPoint(0.0000f, 1.0000f);
		leaf1->RadRamp.AddRampPoint(1.0000f, 0.0000f);
		leaf1->ShapeLeft = ETccRampInterp::Linear;
		leaf1->ShapeLeft.ResizeRampPoints(7);
		leaf1->ShapeLeft.AddRampPoint(0.0000f, 0.3000f);
		leaf1->ShapeLeft.AddRampPoint(0.1016f, 0.6000f);
		leaf1->ShapeLeft.AddRampPoint(0.2056f, 0.6667f);
		leaf1->ShapeLeft.AddRampPoint(0.3555f, 0.6667f);
		leaf1->ShapeLeft.AddRampPoint(0.6759f, 0.5417f);
		leaf1->ShapeLeft.AddRampPoint(0.8960f, 0.6458f);
		leaf1->ShapeLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf1->YawRemapLeft = ETccRampInterp::Linear;
		leaf1->YawRemapLeft.ResizeRampPoints(2);
		leaf1->YawRemapLeft.AddRampPoint(0.0000f, 0.0000f);
		leaf1->YawRemapLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf1->ShapeRight = ETccRampInterp::Linear;
		leaf1->ShapeRight.ResizeRampPoints(7);
		leaf1->ShapeRight.AddRampPoint(0.0000f, 0.3000f);
		leaf1->ShapeRight.AddRampPoint(0.1016f, 0.6000f);
		leaf1->ShapeRight.AddRampPoint(0.2056f, 0.6667f);
		leaf1->ShapeRight.AddRampPoint(0.3555f, 0.6667f);
		leaf1->ShapeRight.AddRampPoint(0.6771f, 0.7333f);
		leaf1->ShapeRight.AddRampPoint(0.8767f, 0.7778f);
		leaf1->ShapeRight.AddRampPoint(1.0000f, 1.0000f);
		leaf1->YawRemapRight = ETccRampInterp::Linear;
		leaf1->YawRemapRight.ResizeRampPoints(2);
		leaf1->YawRemapRight.AddRampPoint(0.0000f, 0.0000f);
		leaf1->YawRemapRight.AddRampPoint(1.0000f, 1.0000f);
		leaf1->ULen = 0.493000f;
		leaf1->VLen = 1.421000f;
		leaf1->VSegs = 20;
		leaf1->Radius = 0.013100f;
		leaf1->Stem = 0.332000f;
		leaf1->VBend = 39.820000f;
		leaf1->YawBeginLeft = 63.200001f;
		leaf1->YawEndLeft = -86.000000f;
		leaf1->YawAdvLeft = 1;
		leaf1->YawBeginRight = 53.400002f;
		leaf1->YawEndRight = -86.000000f;
		leaf1->Amp = 0.137000f;
		leaf1->Freq = 3.481000f;
		leaf1->Cook();
	}
	{
		// Node: mi_leaf
		mi_leaf->SetInput(0, leaf1);
		mi_leaf->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf->Cook();
	}
	{
		// Node: tcc_pack1
		tcc_pack1->SetInput(0, mi_leaf);
		tcc_pack1->GeoName = TEXT("leaf1");
		tcc_pack1->EnableId = 1;
		tcc_pack1->Cook();
	}
	{
		// Node: leaf2
		leaf2->RadRamp = ETccRampInterp::Linear;
		leaf2->RadRamp.ResizeRampPoints(2);
		leaf2->RadRamp.AddRampPoint(0.0000f, 1.0000f);
		leaf2->RadRamp.AddRampPoint(1.0000f, 0.0000f);
		leaf2->ShapeLeft = ETccRampInterp::Linear;
		leaf2->ShapeLeft.ResizeRampPoints(7);
		leaf2->ShapeLeft.AddRampPoint(0.0000f, 0.3000f);
		leaf2->ShapeLeft.AddRampPoint(0.1016f, 0.6000f);
		leaf2->ShapeLeft.AddRampPoint(0.2056f, 0.6667f);
		leaf2->ShapeLeft.AddRampPoint(0.3555f, 0.6667f);
		leaf2->ShapeLeft.AddRampPoint(0.6759f, 0.5417f);
		leaf2->ShapeLeft.AddRampPoint(0.8960f, 0.6458f);
		leaf2->ShapeLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf2->YawRemapLeft = ETccRampInterp::Linear;
		leaf2->YawRemapLeft.ResizeRampPoints(2);
		leaf2->YawRemapLeft.AddRampPoint(0.0000f, 0.0000f);
		leaf2->YawRemapLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf2->ShapeRight = ETccRampInterp::Linear;
		leaf2->ShapeRight.ResizeRampPoints(7);
		leaf2->ShapeRight.AddRampPoint(0.0000f, 0.3000f);
		leaf2->ShapeRight.AddRampPoint(0.1016f, 0.6000f);
		leaf2->ShapeRight.AddRampPoint(0.2056f, 0.6667f);
		leaf2->ShapeRight.AddRampPoint(0.3555f, 0.6667f);
		leaf2->ShapeRight.AddRampPoint(0.6771f, 0.7333f);
		leaf2->ShapeRight.AddRampPoint(0.8767f, 0.7778f);
		leaf2->ShapeRight.AddRampPoint(1.0000f, 1.0000f);
		leaf2->YawRemapRight = ETccRampInterp::Linear;
		leaf2->YawRemapRight.ResizeRampPoints(2);
		leaf2->YawRemapRight.AddRampPoint(0.0000f, 0.0000f);
		leaf2->YawRemapRight.AddRampPoint(1.0000f, 1.0000f);
		leaf2->ULen = 0.375000f;
		leaf2->VLen = 1.187000f;
		leaf2->VSegs = 20;
		leaf2->Stem = 0.232000f;
		leaf2->VBend = 60.000000f;
		leaf2->YawBeginLeft = 31.600000f;
		leaf2->YawAdvLeft = 1;
		leaf2->YawBeginRight = 33.200001f;
		leaf2->YawEndRight = -83.900002f;
		leaf2->Amp = 0.137000f;
		leaf2->Freq = 3.481000f;
		leaf2->Cook();
	}
	{
		// Node: mi_leaf1
		mi_leaf1->SetInput(0, leaf2);
		mi_leaf1->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf1->Cook();
	}
	{
		// Node: tcc_pack2
		tcc_pack2->SetInput(0, mi_leaf1);
		tcc_pack2->GeoName = TEXT("leaf2");
		tcc_pack2->EnableId = 1;
		tcc_pack2->InsId = 1;
		tcc_pack2->Cook();
	}
	{
		// Node: leaf3
		leaf3->RadRamp = ETccRampInterp::Linear;
		leaf3->RadRamp.ResizeRampPoints(2);
		leaf3->RadRamp.AddRampPoint(0.0000f, 1.0000f);
		leaf3->RadRamp.AddRampPoint(1.0000f, 0.0000f);
		leaf3->ShapeLeft = ETccRampInterp::Linear;
		leaf3->ShapeLeft.ResizeRampPoints(7);
		leaf3->ShapeLeft.AddRampPoint(0.0000f, 0.3000f);
		leaf3->ShapeLeft.AddRampPoint(0.1016f, 0.6000f);
		leaf3->ShapeLeft.AddRampPoint(0.2056f, 0.6667f);
		leaf3->ShapeLeft.AddRampPoint(0.3555f, 0.6667f);
		leaf3->ShapeLeft.AddRampPoint(0.6759f, 0.5417f);
		leaf3->ShapeLeft.AddRampPoint(0.8960f, 0.6458f);
		leaf3->ShapeLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf3->YawRemapLeft = ETccRampInterp::Linear;
		leaf3->YawRemapLeft.ResizeRampPoints(2);
		leaf3->YawRemapLeft.AddRampPoint(0.0000f, 0.0000f);
		leaf3->YawRemapLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf3->ShapeRight = ETccRampInterp::Linear;
		leaf3->ShapeRight.ResizeRampPoints(7);
		leaf3->ShapeRight.AddRampPoint(0.0000f, 0.3000f);
		leaf3->ShapeRight.AddRampPoint(0.1016f, 0.6000f);
		leaf3->ShapeRight.AddRampPoint(0.2056f, 0.6667f);
		leaf3->ShapeRight.AddRampPoint(0.3555f, 0.6667f);
		leaf3->ShapeRight.AddRampPoint(0.6771f, 0.7333f);
		leaf3->ShapeRight.AddRampPoint(0.8767f, 0.7778f);
		leaf3->ShapeRight.AddRampPoint(1.0000f, 1.0000f);
		leaf3->YawRemapRight = ETccRampInterp::Linear;
		leaf3->YawRemapRight.ResizeRampPoints(2);
		leaf3->YawRemapRight.AddRampPoint(0.0000f, 0.0000f);
		leaf3->YawRemapRight.AddRampPoint(1.0000f, 1.0000f);
		leaf3->ULen = 0.257000f;
		leaf3->VLen = 1.187000f;
		leaf3->VSegs = 20;
		leaf3->Stem = 0.232000f;
		leaf3->VBend = 42.570000f;
		leaf3->YawBeginLeft = 31.600000f;
		leaf3->YawAdvLeft = 1;
		leaf3->YawBeginRight = 33.200001f;
		leaf3->Amp = 0.050000f;
		leaf3->Freq = 3.481000f;
		leaf3->Cook();
	}
	{
		// Node: mi_leaf2
		mi_leaf2->SetInput(0, leaf3);
		mi_leaf2->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf2->Cook();
	}
	{
		// Node: tcc_pack3
		tcc_pack3->SetInput(0, mi_leaf2);
		tcc_pack3->GeoName = TEXT("leaf3");
		tcc_pack3->EnableId = 1;
		tcc_pack3->InsId = 2;
		tcc_pack3->Cook();
	}
	{
		// Node: tcc_merge1
		tcc_merge1->SetInput(0, tcc_pack1);
		tcc_merge1->SetInput(1, tcc_pack2);
		tcc_merge1->SetInput(2, tcc_pack3);
		tcc_merge1->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter1
		tcr_tree_leaf_scatter1->SetInput(0, trunk);
		tcr_tree_leaf_scatter1->SetInput(1, tcc_merge1);
		tcr_tree_leaf_scatter1->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongBranch.ResizeRampPoints(11);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0554f, 0.4667f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0984f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.1870f, 0.6000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.2829f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.4920f, 0.5667f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.5498f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.6900f, 0.6333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.8167f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.9397f, 0.6333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->Gseed = 2;
		tcr_tree_leaf_scatter1->AgeDis = 0.060000f;
		tcr_tree_leaf_scatter1->UseInstanceId = UTcrTreeLeafScatter::Random;
		tcr_tree_leaf_scatter1->Method = UTcrTreeLeafScatter::AroundBranch;
		tcr_tree_leaf_scatter1->AroundRange = FVector2f(0.000000f, 110.000000f);
		tcr_tree_leaf_scatter1->PitchRange = FVector2f(40.000000f, 86.000000f);
		tcr_tree_leaf_scatter1->Scale = 0.574000f;
		tcr_tree_leaf_scatter1->ScaleShowAdv = 1;
		tcr_tree_leaf_scatter1->Cook();
	}
	SetGeoResult(UTcrAraceae01::output0, tcr_tree_leaf_scatter1->GetGeoResult(0));
}

