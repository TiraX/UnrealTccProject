// Auto generated by UnrealTcc. 

#include "TcrTreeShort03.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrTreeBranchGrowth.h"
#include "TcrTreeSkinGrowth.h"
#include "TcrTreeShort02.h"
#include "TcrTreeLeafScatter.h"
#include "TcrTreeSimpleLeaf.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeShort03::UTcrTreeShort03() 
{
}
FTccNodePtr UTcrTreeShort03::CreateNode() 
{
	TSharedPtr<FTcrTreeShort03> Node = MakeShared<FTcrTreeShort03>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeShort03::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeShort03> Node = StaticCastSharedPtr<FTcrTreeShort03>(InNode);
	Node->Gseed = Gseed;
}

 FTcrTreeShort03::FTcrTreeShort03() 
{
	InitInputsCount(0);
	short03_trunk = new FTcrTreeTrunkGrowth();
	short03_trunk->InitMultiRefs(true); // RefCount = 2
	branch1 = new FTcrTreeBranchGrowth();
	branch1->InitMultiRefs(true); // RefCount = 2
	branch2 = new FTcrTreeBranchGrowth();
	branch2->InitMultiRefs(false); // RefCount = 1
	tcc_merge2 = new FTccMerge();
	tcc_merge2->InitMultiRefs(true); // RefCount = 3
	tcc_merge1 = new FTccMerge();
	tcc_merge1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_skin_growth1 = new FTcrTreeSkinGrowth();
	tcr_tree_skin_growth1->InitMultiRefs(false); // RefCount = 1
	mi_trunk = new FTccUnrealMaterial();
	mi_trunk->InitMultiRefs(false); // RefCount = 1
	tcc_pack1 = new FTccPack();
	tcc_pack1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_short02 = new FTcrTreeShort02();
	tcr_tree_short02->InitMultiRefs(false); // RefCount = 1
	scatter_head = new FTcrTreeLeafScatter();
	scatter_head->InitMultiRefs(false); // RefCount = 1
	leaf_shape1 = new FTcrTreeSimpleLeaf();
	leaf_shape1->InitMultiRefs(false); // RefCount = 1
	mi_leaf = new FTccUnrealMaterial();
	mi_leaf->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter1 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter1->InitMultiRefs(false); // RefCount = 1
	tcc_merge3 = new FTccMerge();
	tcc_merge3->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeShort03::~FTcrTreeShort03() 
{
	delete short03_trunk; 
	delete branch1; 
	delete branch2; 
	delete tcc_merge2; 
	delete tcc_merge1; 
	delete tcr_tree_skin_growth1; 
	delete mi_trunk; 
	delete tcc_pack1; 
	delete tcr_tree_short02; 
	delete scatter_head; 
	delete leaf_shape1; 
	delete mi_leaf; 
	delete tcr_tree_leaf_scatter1; 
	delete tcc_merge3; 
}
void FTcrTreeShort03::Cook() 
{
	{
		// Node: short03_trunk
		short03_trunk->RadiusShape = ETccRampInterp::Linear;
		short03_trunk->RadiusShape.ResizeRampPoints(3);
		short03_trunk->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		short03_trunk->RadiusShape.AddRampPoint(0.7291f, 0.6458f);
		short03_trunk->RadiusShape.AddRampPoint(1.0000f, 0.7000f);
		short03_trunk->Gseed = int32(Gseed);
		short03_trunk->TreeAge = 7.830000f;
		short03_trunk->MaxAge = 0.530000f;
		short03_trunk->Radius = 0.130000f;
		short03_trunk->Cook();
	}
	{
		// Node: branch1
		branch1->SetInput(0, short03_trunk);
		branch1->MaxCountRamp = ETccRampInterp::Linear;
		branch1->MaxCountRamp.ResizeRampPoints(2);
		branch1->MaxCountRamp.AddRampPoint(0.0000f, 1.0000f);
		branch1->MaxCountRamp.AddRampPoint(1.0000f, 1.0000f);
		branch1->SegLenRamp = ETccRampInterp::Linear;
		branch1->SegLenRamp.ResizeRampPoints(2);
		branch1->SegLenRamp.AddRampPoint(0.0000f, 1.0000f);
		branch1->SegLenRamp.AddRampPoint(1.0000f, 1.0000f);
		branch1->StartPercentRamp = ETccRampInterp::Linear;
		branch1->StartPercentRamp.ResizeRampPoints(2);
		branch1->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		branch1->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		branch1->AgeDisRamp = ETccRampInterp::Linear;
		branch1->AgeDisRamp.ResizeRampPoints(2);
		branch1->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		branch1->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		branch1->MaxAgeRamp = ETccRampInterp::Linear;
		branch1->MaxAgeRamp.ResizeRampPoints(9);
		branch1->MaxAgeRamp.AddRampPoint(0.0000f, 1.0000f);
		branch1->MaxAgeRamp.AddRampPoint(0.1317f, 0.0000f);
		branch1->MaxAgeRamp.AddRampPoint(0.2898f, 1.0000f);
		branch1->MaxAgeRamp.AddRampPoint(0.3940f, 0.0000f);
		branch1->MaxAgeRamp.AddRampPoint(0.5282f, 1.0000f);
		branch1->MaxAgeRamp.AddRampPoint(0.6838f, 0.0333f);
		branch1->MaxAgeRamp.AddRampPoint(0.7729f, 1.0000f);
		branch1->MaxAgeRamp.AddRampPoint(0.8946f, 0.0000f);
		branch1->MaxAgeRamp.AddRampPoint(1.0000f, 1.0000f);
		branch1->RadiusShape = ETccRampInterp::Linear;
		branch1->RadiusShape.ResizeRampPoints(3);
		branch1->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		branch1->RadiusShape.AddRampPoint(0.2288f, 0.6458f);
		branch1->RadiusShape.AddRampPoint(1.0000f, 0.4375f);
		branch1->Pitch0Ramp = ETccRampInterp::Linear;
		branch1->Pitch0Ramp.ResizeRampPoints(2);
		branch1->Pitch0Ramp.AddRampPoint(0.0000f, 1.0000f);
		branch1->Pitch0Ramp.AddRampPoint(1.0000f, 1.0000f);
		branch1->Pitch1Ramp = ETccRampInterp::Linear;
		branch1->Pitch1Ramp.ResizeRampPoints(2);
		branch1->Pitch1Ramp.AddRampPoint(0.0000f, 1.0000f);
		branch1->Pitch1Ramp.AddRampPoint(1.0000f, 1.0000f);
		branch1->Soft = ETccRampInterp::Linear;
		branch1->Soft.ResizeRampPoints(2);
		branch1->Soft.AddRampPoint(0.0000f, 0.0000f);
		branch1->Soft.AddRampPoint(1.0000f, 1.0000f);
		branch1->Gseed = int32(Gseed);
		branch1->MaxCount = 3;
		branch1->StartPercent = 0.960000f;
		branch1->AgeDis = 0.005000f;
		branch1->MaxAge = 0.700000f;
		branch1->MaxAgeShowAdv = 1;
		branch1->MaxAgeAdv = 1;
		branch1->YawOffset = 50.000000f;
		branch1->Pitch0 = 34.099998f;
		branch1->Pitch1 = 10.700000f;
		branch1->Cook();
	}
	{
		// Node: branch2
		branch2->SetInput(0, branch1);
		branch2->MaxCountRamp = ETccRampInterp::Linear;
		branch2->MaxCountRamp.ResizeRampPoints(2);
		branch2->MaxCountRamp.AddRampPoint(0.0000f, 1.0000f);
		branch2->MaxCountRamp.AddRampPoint(1.0000f, 1.0000f);
		branch2->SegLenRamp = ETccRampInterp::Linear;
		branch2->SegLenRamp.ResizeRampPoints(2);
		branch2->SegLenRamp.AddRampPoint(0.0000f, 1.0000f);
		branch2->SegLenRamp.AddRampPoint(1.0000f, 1.0000f);
		branch2->StartPercentRamp = ETccRampInterp::Linear;
		branch2->StartPercentRamp.ResizeRampPoints(2);
		branch2->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		branch2->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		branch2->AgeDisRamp = ETccRampInterp::Linear;
		branch2->AgeDisRamp.ResizeRampPoints(2);
		branch2->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		branch2->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		branch2->MaxAgeRamp = ETccRampInterp::Linear;
		branch2->MaxAgeRamp.ResizeRampPoints(6);
		branch2->MaxAgeRamp.AddRampPoint(0.0000f, 1.0000f);
		branch2->MaxAgeRamp.AddRampPoint(0.2572f, 1.0000f);
		branch2->MaxAgeRamp.AddRampPoint(0.4354f, 0.0667f);
		branch2->MaxAgeRamp.AddRampPoint(0.5834f, 1.0000f);
		branch2->MaxAgeRamp.AddRampPoint(0.7942f, 0.0000f);
		branch2->MaxAgeRamp.AddRampPoint(1.0000f, 1.0000f);
		branch2->RadiusShape = ETccRampInterp::Linear;
		branch2->RadiusShape.ResizeRampPoints(2);
		branch2->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		branch2->RadiusShape.AddRampPoint(1.0000f, 0.4375f);
		branch2->Pitch0Ramp = ETccRampInterp::Linear;
		branch2->Pitch0Ramp.ResizeRampPoints(2);
		branch2->Pitch0Ramp.AddRampPoint(0.0000f, 1.0000f);
		branch2->Pitch0Ramp.AddRampPoint(1.0000f, 1.0000f);
		branch2->Pitch1Ramp = ETccRampInterp::Linear;
		branch2->Pitch1Ramp.ResizeRampPoints(2);
		branch2->Pitch1Ramp.AddRampPoint(0.0000f, 1.0000f);
		branch2->Pitch1Ramp.AddRampPoint(1.0000f, 1.0000f);
		branch2->Soft = ETccRampInterp::Linear;
		branch2->Soft.ResizeRampPoints(2);
		branch2->Soft.AddRampPoint(0.0000f, 0.0000f);
		branch2->Soft.AddRampPoint(1.0000f, 1.0000f);
		branch2->Gseed = int32(Gseed);
		branch2->IgnorePercent = 0.338000f;
		branch2->MaxCount = 1;
		branch2->StartPercent = 0.563000f;
		branch2->AgeDis = 0.049000f;
		branch2->MaxAge = 0.560000f;
		branch2->MaxAgeShowAdv = 1;
		branch2->MaxAgeAdv = 1;
		branch2->YawOffset = 66.000000f;
		branch2->YawOffsetR = 90.000000f;
		branch2->Yaw = 180.000000f;
		branch2->Pitch0 = 36.000000f;
		branch2->Pitch1 = 18.500000f;
		branch2->Cook();
	}
	{
		// Node: tcc_merge2
		tcc_merge2->SetInput(0, branch1);
		tcc_merge2->SetInput(1, branch2);
		tcc_merge2->Cook();
	}
	{
		// Node: tcc_merge1
		tcc_merge1->SetInput(0, short03_trunk);
		tcc_merge1->SetInput(1, tcc_merge2);
		tcc_merge1->Cook();
	}
	{
		// Node: tcr_tree_skin_growth1
		tcr_tree_skin_growth1->SetInput(0, tcc_merge1);
		tcr_tree_skin_growth1->Cook();
	}
	{
		// Node: mi_trunk
		mi_trunk->SetInput(0, tcr_tree_skin_growth1);
		mi_trunk->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Trunk.MI_TreeBig_Trunk");
		mi_trunk->Cook();
	}
	{
		// Node: tcc_pack1
		tcc_pack1->SetInput(0, mi_trunk);
		tcc_pack1->GeoName = TEXT("short03_trunk");
		tcc_pack1->Cook();
	}
	{
		// Node: tcr_tree_short02
		tcr_tree_short02->Cook();
	}
	{
		// Node: scatter_head
		scatter_head->SetInput(0, tcc_merge2);
		scatter_head->SetInput(1, tcr_tree_short02);
		scatter_head->StartPercentRamp = ETccRampInterp::Linear;
		scatter_head->StartPercentRamp.ResizeRampPoints(2);
		scatter_head->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		scatter_head->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		scatter_head->AgeDisRamp = ETccRampInterp::Linear;
		scatter_head->AgeDisRamp.ResizeRampPoints(2);
		scatter_head->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		scatter_head->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		scatter_head->YawRamp = ETccRampInterp::Linear;
		scatter_head->YawRamp.ResizeRampPoints(2);
		scatter_head->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		scatter_head->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		scatter_head->PitchRemap = ETccRampInterp::Linear;
		scatter_head->PitchRemap.ResizeRampPoints(2);
		scatter_head->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		scatter_head->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		scatter_head->PitchAlongTrunk = ETccRampInterp::Linear;
		scatter_head->PitchAlongTrunk.ResizeRampPoints(2);
		scatter_head->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		scatter_head->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		scatter_head->ScaleAlongBranch = ETccRampInterp::Linear;
		scatter_head->ScaleAlongBranch.ResizeRampPoints(2);
		scatter_head->ScaleAlongBranch.AddRampPoint(0.0000f, 1.0000f);
		scatter_head->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		scatter_head->ScaleAlongTrunk = ETccRampInterp::Linear;
		scatter_head->ScaleAlongTrunk.ResizeRampPoints(7);
		scatter_head->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		scatter_head->ScaleAlongTrunk.AddRampPoint(0.0824f, 0.8000f);
		scatter_head->ScaleAlongTrunk.AddRampPoint(0.1759f, 1.0000f);
		scatter_head->ScaleAlongTrunk.AddRampPoint(0.3764f, 0.6333f);
		scatter_head->ScaleAlongTrunk.AddRampPoint(0.5879f, 1.0000f);
		scatter_head->ScaleAlongTrunk.AddRampPoint(0.7663f, 0.6333f);
		scatter_head->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		scatter_head->Gseed = int32(Gseed);
		scatter_head->StartPercent = 0.806000f;
		scatter_head->AgeDis = 0.116000f;
		scatter_head->Method = UTcrTreeLeafScatter::AroundBranch;
		scatter_head->PitchRange = FVector2f(0.000000f, 0.000000f);
		scatter_head->Scale = 0.422000f;
		scatter_head->ScaleShowAdv = 1;
		scatter_head->Cook();
	}
	{
		// Node: leaf_shape1
		leaf_shape1->Shape = ETccRampInterp::Bezier;
		leaf_shape1->Shape.ResizeRampPoints(7);
		leaf_shape1->Shape.AddRampPoint(0.0000f, 0.0885f);
		leaf_shape1->Shape.AddRampPoint(0.0677f, 0.7708f);
		leaf_shape1->Shape.AddRampPoint(0.3071f, 1.0000f);
		leaf_shape1->Shape.AddRampPoint(0.5442f, 1.0000f);
		leaf_shape1->Shape.AddRampPoint(0.7965f, 0.8125f);
		leaf_shape1->Shape.AddRampPoint(0.9468f, 0.5417f);
		leaf_shape1->Shape.AddRampPoint(1.0000f, 0.0000f);
		leaf_shape1->Size = FVector2f(0.100000f, 0.500000f);
		leaf_shape1->Rows = 25;
		leaf_shape1->Cols = 7;
		leaf_shape1->Bend = -35.799999f;
		leaf_shape1->Curl = -34.200001f;
		leaf_shape1->Cook();
	}
	{
		// Node: mi_leaf
		mi_leaf->SetInput(0, leaf_shape1);
		mi_leaf->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter1
		tcr_tree_leaf_scatter1->SetInput(0, tcc_merge2);
		tcr_tree_leaf_scatter1->SetInput(1, mi_leaf);
		tcr_tree_leaf_scatter1->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongBranch.ResizeRampPoints(12);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0480f, 0.4667f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.1144f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.1796f, 0.7333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.2583f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.3432f, 0.6333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.4022f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.5092f, 0.5333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.6125f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.7417f, 0.5333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.8216f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercent = 0.850000f;
		tcr_tree_leaf_scatter1->AgeDis = 0.002000f;
		tcr_tree_leaf_scatter1->RadiusShrink = 2.000000f;
		tcr_tree_leaf_scatter1->Method = UTcrTreeLeafScatter::AroundBranch;
		tcr_tree_leaf_scatter1->PitchRange = FVector2f(-80.000000f, -45.000000f);
		tcr_tree_leaf_scatter1->Scale = 0.327000f;
		tcr_tree_leaf_scatter1->ScaleShowAdv = 1;
		tcr_tree_leaf_scatter1->Cook();
	}
	{
		// Node: tcc_merge3
		tcc_merge3->SetInput(0, tcc_pack1);
		tcc_merge3->SetInput(1, scatter_head);
		tcc_merge3->SetInput(2, tcr_tree_leaf_scatter1);
		tcc_merge3->Cook();
	}
	SetGeoResult(UTcrTreeShort03::output0, tcc_merge3->GetGeoResult(0));
}

