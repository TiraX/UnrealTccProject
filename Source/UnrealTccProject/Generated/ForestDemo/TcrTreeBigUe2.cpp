// Auto generated by UnrealTcc. 

#include "TcrTreeBigUe2.h"
#include "TcrTreeBigSubbranchesGrowth.h"
#include "TcrTreeBranchFrac.h"
#include "TcrTreeSkinGrowth.h"
#include "TcrTreeBigSubbranchScatter.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeBigUe2::UTcrTreeBigUe2() 
{
}
FTccNodePtr UTcrTreeBigUe2::CreateNode() 
{
	TSharedPtr<FTcrTreeBigUe2> Node = MakeShared<FTcrTreeBigUe2>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeBigUe2::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeBigUe2> Node = StaticCastSharedPtr<FTcrTreeBigUe2>(InNode);
	Node->Yaw = Yaw;
	Node->YawR = YawR;
	Node->Pitch = Pitch;
	Node->PitchR = PitchR;
	Node->Roll = Roll;
	Node->Yaw2 = Yaw2;
	Node->YawR2 = YawR2;
	Node->Pitch2 = Pitch2;
	Node->PitchR2 = PitchR2;
}

 FTcrTreeBigUe2::FTcrTreeBigUe2() 
{
	InitInputsCount(0);
	subbranches_growth2 = new FTcrTreeBigSubbranchesGrowth();
	subbranches_growth2->InitMultiRefs(false); // RefCount = 1
	foreach_begin2 = new FTccForBlock();
	foreach_begin2->InitMultiRefs(false); // RefCount = 1
	foreach_begin2->InitInputsCount(2);
		info = new FTccVex();
		info->InitMultiRefs(false); // RefCount = 1
		branch_frac3 = new FTcrTreeBranchFrac();
		branch_frac3->InitMultiRefs(true); // RefCount = 2
		tcr_tree_skin_growth7 = new FTcrTreeSkinGrowth();
		tcr_tree_skin_growth7->InitMultiRefs(false); // RefCount = 1
		tcc_pack1 = new FTccPack();
		tcc_pack1->InitMultiRefs(false); // RefCount = 1
		last_3_levels = new FTccBlastByFeature();
		last_3_levels->InitMultiRefs(false); // RefCount = 1
		tcr_tree_big_subbranch_scatter1 = new FTcrTreeBigSubbranchScatter();
		tcr_tree_big_subbranch_scatter1->InitMultiRefs(false); // RefCount = 1
		tcc_merge1 = new FTccMerge();
		tcc_merge1->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeBigUe2::~FTcrTreeBigUe2() 
{
	delete subbranches_growth2; 
	delete foreach_begin2; 
		delete info; 
		delete branch_frac3; 
		delete tcr_tree_skin_growth7; 
		delete tcc_pack1; 
		delete last_3_levels; 
		delete tcr_tree_big_subbranch_scatter1; 
		delete tcc_merge1; 
}
void FTcrTreeBigUe2::Cook() 
{
	{
		// Node: subbranches_growth2
		subbranches_growth2->Gseed = 8;
		subbranches_growth2->Yaw = FVector2f(Yaw.X, Yaw.Y);
		subbranches_growth2->YawR = float(YawR);
		subbranches_growth2->Pitch = FVector2f(Pitch.X, Pitch.Y);
		subbranches_growth2->PitchR = float(PitchR);
		subbranches_growth2->Roll = float(Roll);
		subbranches_growth2->Yaw2 = FVector2f(Yaw2.X, Yaw2.Y);
		subbranches_growth2->YawR2 = float(YawR2);
		subbranches_growth2->Pitch2 = FVector2f(Pitch2.X, Pitch2.Y);
		subbranches_growth2->PitchR2 = float(PitchR2);
		subbranches_growth2->Cook();
	}
	{
		// Node: foreach_begin2
		foreach_begin2->SetInput(0, nullptr);
		foreach_begin2->SetInput(1, subbranches_growth2);
		foreach_begin2->Itermethod = UTccForBlock::ByCount;
		foreach_begin2->Method = UTccForBlock::MergeEachIteration;
		foreach_begin2->Iterations = 1;
		foreach_begin2->Cook();
		{
			// By Count, Merge Each Iteration
			const int32 NumIterations = 1;
			for(int32 __iter = 0; __iter < NumIterations; __iter ++)
			{
				const int32 _iteration = __iter;
				FTccNode* block_input0 = nullptr;
				FTccNode* block_input1 = subbranches_growth2;
				{
					// Node: info
					info->SetInput(0, block_input0);
					info->SetInput(1, nullptr);
					info->Cook();
					{
						FTccGeometryPtr Geo0 = info->GetGeoRef(0);
						FTccAttribPtr attr_pitch_base = Geo0->AddDetailAttrib("pitch_base", ETccAttribType::F);
						FTccAttribPtr attr_split_dis = Geo0->AddDetailAttrib("split_dis", ETccAttribType::F);
						float& _pitch_base = attr_pitch_base->GetData<float>()[0];
						float& _split_dis = attr_split_dis->GetData<float>()[0];
						int32 iter = _iteration;
						// pitch base from -15 to 30
						float sep = 15.f;
						_pitch_base = sep * iter - sep;
						// split dis from 0.7 to 0.6?
						_split_dis = 0.7f - 0.0f * iter;
					}
				}
				
				{
					// Node: branch_frac3
					branch_frac3->SetInput(0, info);
					FTccGeometryConstPtr Geo0 = branch_frac3->GetInput(0)->GetConstGeoResult(0);
					branch_frac3->PitchBase = float(hs_detail(Geo0, "pitch_base", 0));
					branch_frac3->Sep = 0.261000f;
					branch_frac3->SplitDis = float(hs_detail(Geo0, "split_dis", 0));
					branch_frac3->SplitDisFalloff = 0.945000f;
					branch_frac3->Angle = 35.299999f;
					branch_frac3->Roll = 49.700001f;
					branch_frac3->Force = 0.357000f;
					branch_frac3->Cook();
				}
				
				{
					// Node: tcr_tree_skin_growth7
					tcr_tree_skin_growth7->SetInput(0, branch_frac3);
					tcr_tree_skin_growth7->Cols = 4;
					tcr_tree_skin_growth7->Amp = 0.000000f;
					tcr_tree_skin_growth7->Incroll = 0.000000f;
					tcr_tree_skin_growth7->Cook();
				}
				
				{
					// Node: tcc_pack1
					tcc_pack1->SetInput(0, tcr_tree_skin_growth7);
					tcc_pack1->Cook();
				}
				
				{
					// Node: last_3_levels
					last_3_levels->SetInput(0, branch_frac3);
					last_3_levels->ByAttrib = 1;
					last_3_levels->Attrib = TEXT("frac_level");
					last_3_levels->Op = UTccBlastByFeature::Less;
					last_3_levels->Value = 5.000000f;
					last_3_levels->Cook();
				}
				
				{
					// Node: tcr_tree_big_subbranch_scatter1
					tcr_tree_big_subbranch_scatter1->SetInput(0, last_3_levels);
					tcr_tree_big_subbranch_scatter1->SetInput(1, block_input1);
					tcr_tree_big_subbranch_scatter1->Gseed = 3;
					tcr_tree_big_subbranch_scatter1->AgeDis = 0.100000f;
					tcr_tree_big_subbranch_scatter1->Scale = FVector2f(0.500000f, 0.700000f);
					tcr_tree_big_subbranch_scatter1->Cook();
				}
				
				{
					// Node: tcc_merge1
					tcc_merge1->SetInput(0, tcc_pack1);
					tcc_merge1->SetInput(1, tcr_tree_big_subbranch_scatter1);
					tcc_merge1->Cook();
				}
				
				foreach_begin2->SetPieceResult(__iter, tcc_merge1->GetGeoResult(0));
			}
			foreach_begin2->MergeResult();
		}
	}
	SetGeoResult(UTcrTreeBigUe2::output0, foreach_begin2->GetGeoResult(0));
}

