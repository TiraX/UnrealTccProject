// Auto generated by UnrealTcc. 

#include "TcrFern02.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrTreeSimpleLeaf.h"
#include "TcrTreeLeafScatter.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrFern02::UTcrFern02() 
{
}
FTccNodePtr UTcrFern02::CreateNode() 
{
	TSharedPtr<FTcrFern02> Node = MakeShared<FTcrFern02>();
	SyncParams(Node);
	return Node;
}
void UTcrFern02::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrFern02> Node = StaticCastSharedPtr<FTcrFern02>(InNode);
	Node->Gseed = Gseed;
}

 FTcrFern02::FTcrFern02() 
{
	InitInputsCount(0);
	trunk = new FTcrTreeTrunkGrowth();
	trunk->InitMultiRefs(false); // RefCount = 1
	leaf1 = new FTcrTreeSimpleLeaf();
	leaf1->InitMultiRefs(false); // RefCount = 1
	mi_leaf = new FTccUnrealMaterial();
	mi_leaf->InitMultiRefs(false); // RefCount = 1
	tcc_pack1 = new FTccPack();
	tcc_pack1->InitMultiRefs(false); // RefCount = 1
	leaf2 = new FTcrTreeSimpleLeaf();
	leaf2->InitMultiRefs(false); // RefCount = 1
	mi_leaf1 = new FTccUnrealMaterial();
	mi_leaf1->InitMultiRefs(false); // RefCount = 1
	tcc_pack2 = new FTccPack();
	tcc_pack2->InitMultiRefs(false); // RefCount = 1
	leaf3 = new FTcrTreeSimpleLeaf();
	leaf3->InitMultiRefs(false); // RefCount = 1
	mi_leaf2 = new FTccUnrealMaterial();
	mi_leaf2->InitMultiRefs(false); // RefCount = 1
	tcc_pack3 = new FTccPack();
	tcc_pack3->InitMultiRefs(false); // RefCount = 1
	leaf4 = new FTcrTreeSimpleLeaf();
	leaf4->InitMultiRefs(false); // RefCount = 1
	mi_leaf3 = new FTccUnrealMaterial();
	mi_leaf3->InitMultiRefs(false); // RefCount = 1
	tcc_bend1 = new FTccBend();
	tcc_bend1->InitMultiRefs(false); // RefCount = 1
	tcc_pack4 = new FTccPack();
	tcc_pack4->InitMultiRefs(false); // RefCount = 1
	tcc_merge1 = new FTccMerge();
	tcc_merge1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter1 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter1->InitMultiRefs(false); // RefCount = 1
}
 FTcrFern02::~FTcrFern02() 
{
	delete trunk; 
	delete leaf1; 
	delete mi_leaf; 
	delete tcc_pack1; 
	delete leaf2; 
	delete mi_leaf1; 
	delete tcc_pack2; 
	delete leaf3; 
	delete mi_leaf2; 
	delete tcc_pack3; 
	delete leaf4; 
	delete mi_leaf3; 
	delete tcc_bend1; 
	delete tcc_pack4; 
	delete tcc_merge1; 
	delete tcr_tree_leaf_scatter1; 
}
void FTcrFern02::Cook() 
{
	{
		// Node: trunk
		trunk->RadiusShape = ETccRampInterp::Bezier;
		trunk->RadiusShape.ResizeRampPoints(3);
		trunk->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		trunk->RadiusShape.AddRampPoint(0.1500f, 0.5000f);
		trunk->RadiusShape.AddRampPoint(1.0000f, 0.5000f);
		trunk->MaxAge = 0.300000f;
		trunk->Radius = 0.020000f;
		trunk->Cook();
	}
	{
		// Node: leaf1
		leaf1->Shape = ETccRampInterp::Bezier;
		leaf1->Shape.ResizeRampPoints(7);
		leaf1->Shape.AddRampPoint(0.0000f, 0.2708f);
		leaf1->Shape.AddRampPoint(0.1681f, 1.0000f);
		leaf1->Shape.AddRampPoint(0.2721f, 0.9583f);
		leaf1->Shape.AddRampPoint(0.4172f, 1.0000f);
		leaf1->Shape.AddRampPoint(0.6977f, 1.0000f);
		leaf1->Shape.AddRampPoint(0.8452f, 0.7708f);
		leaf1->Shape.AddRampPoint(1.0000f, 0.0000f);
		leaf1->Size = FVector2f(0.070000f, 3.000000f);
		leaf1->Rows = 30;
		leaf1->Stem = 0.137900f;
		leaf1->Bend = -115.900002f;
		leaf1->BendOffset = 0.381000f;
		leaf1->BendLen = 0.347000f;
		leaf1->Cook();
	}
	{
		// Node: mi_leaf
		mi_leaf->SetInput(0, leaf1);
		mi_leaf->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf->Cook();
	}
	{
		// Node: tcc_pack1
		tcc_pack1->SetInput(0, mi_leaf);
		tcc_pack1->GeoName = TEXT("leaf1");
		tcc_pack1->EnableId = 1;
		tcc_pack1->Cook();
	}
	{
		// Node: leaf2
		leaf2->Shape = ETccRampInterp::Bezier;
		leaf2->Shape.ResizeRampPoints(7);
		leaf2->Shape.AddRampPoint(0.0000f, 0.2708f);
		leaf2->Shape.AddRampPoint(0.1681f, 1.0000f);
		leaf2->Shape.AddRampPoint(0.2721f, 0.9583f);
		leaf2->Shape.AddRampPoint(0.4172f, 1.0000f);
		leaf2->Shape.AddRampPoint(0.6977f, 1.0000f);
		leaf2->Shape.AddRampPoint(0.8452f, 0.7708f);
		leaf2->Shape.AddRampPoint(1.0000f, 0.0000f);
		leaf2->Size = FVector2f(0.110000f, 2.480000f);
		leaf2->Rows = 30;
		leaf2->Stem = 0.137900f;
		leaf2->BendOffset = 0.255000f;
		leaf2->BendLen = 0.593000f;
		leaf2->Cook();
	}
	{
		// Node: mi_leaf1
		mi_leaf1->SetInput(0, leaf2);
		mi_leaf1->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf1->Cook();
	}
	{
		// Node: tcc_pack2
		tcc_pack2->SetInput(0, mi_leaf1);
		tcc_pack2->GeoName = TEXT("leaf2");
		tcc_pack2->EnableId = 1;
		tcc_pack2->InsId = 2;
		tcc_pack2->Cook();
	}
	{
		// Node: leaf3
		leaf3->Shape = ETccRampInterp::Bezier;
		leaf3->Shape.ResizeRampPoints(7);
		leaf3->Shape.AddRampPoint(0.0000f, 0.2708f);
		leaf3->Shape.AddRampPoint(0.1681f, 1.0000f);
		leaf3->Shape.AddRampPoint(0.2721f, 0.9583f);
		leaf3->Shape.AddRampPoint(0.4172f, 1.0000f);
		leaf3->Shape.AddRampPoint(0.6977f, 1.0000f);
		leaf3->Shape.AddRampPoint(0.8452f, 0.7708f);
		leaf3->Shape.AddRampPoint(1.0000f, 0.0000f);
		leaf3->Size = FVector2f(0.100000f, 3.600000f);
		leaf3->Rows = 30;
		leaf3->Stem = 0.137900f;
		leaf3->Cook();
	}
	{
		// Node: mi_leaf2
		mi_leaf2->SetInput(0, leaf3);
		mi_leaf2->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf2->Cook();
	}
	{
		// Node: tcc_pack3
		tcc_pack3->SetInput(0, mi_leaf2);
		tcc_pack3->GeoName = TEXT("leaf3");
		tcc_pack3->EnableId = 1;
		tcc_pack3->InsId = 3;
		tcc_pack3->Cook();
	}
	{
		// Node: leaf4
		leaf4->Shape = ETccRampInterp::Bezier;
		leaf4->Shape.ResizeRampPoints(7);
		leaf4->Shape.AddRampPoint(0.0000f, 0.2708f);
		leaf4->Shape.AddRampPoint(0.1681f, 1.0000f);
		leaf4->Shape.AddRampPoint(0.2721f, 0.9583f);
		leaf4->Shape.AddRampPoint(0.4172f, 1.0000f);
		leaf4->Shape.AddRampPoint(0.6977f, 1.0000f);
		leaf4->Shape.AddRampPoint(0.8452f, 0.7708f);
		leaf4->Shape.AddRampPoint(1.0000f, 0.0000f);
		leaf4->Size = FVector2f(0.100000f, 3.930000f);
		leaf4->Rows = 30;
		leaf4->Stem = 0.137900f;
		leaf4->Bend = -29.200001f;
		leaf4->Cook();
	}
	{
		// Node: mi_leaf3
		mi_leaf3->SetInput(0, leaf4);
		mi_leaf3->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf3->Cook();
	}
	{
		// Node: tcc_bend1
		tcc_bend1->SetInput(0, mi_leaf3);
		tcc_bend1->Bend = -27.600000f;
		tcc_bend1->Origin = FVector3f(0.000000f, 3.000000f, 0.000000f);
		tcc_bend1->Cook();
	}
	{
		// Node: tcc_pack4
		tcc_pack4->SetInput(0, tcc_bend1);
		tcc_pack4->GeoName = TEXT("leaf4");
		tcc_pack4->EnableId = 1;
		tcc_pack4->InsId = 4;
		tcc_pack4->Cook();
	}
	{
		// Node: tcc_merge1
		tcc_merge1->SetInput(0, tcc_pack1);
		tcc_merge1->SetInput(1, tcc_pack2);
		tcc_merge1->SetInput(2, tcc_pack3);
		tcc_merge1->SetInput(3, tcc_pack4);
		tcc_merge1->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter1
		tcr_tree_leaf_scatter1->SetInput(0, trunk);
		tcr_tree_leaf_scatter1->SetInput(1, tcc_merge1);
		tcr_tree_leaf_scatter1->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongBranch.ResizeRampPoints(11);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0972f, 0.5000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.1673f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.2620f, 0.5333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.3530f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.5486f, 0.8333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.7011f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.7847f, 0.5333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.8672f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.9508f, 0.7333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->Gseed = int32(Gseed);
		tcr_tree_leaf_scatter1->AgeDis = 0.040000f;
		tcr_tree_leaf_scatter1->UseInstanceId = UTcrTreeLeafScatter::Random;
		tcr_tree_leaf_scatter1->Method = UTcrTreeLeafScatter::AroundBranch;
		tcr_tree_leaf_scatter1->AroundRange = FVector2f(0.000000f, 120.000000f);
		tcr_tree_leaf_scatter1->YawSep = 77.000000f;
		tcr_tree_leaf_scatter1->PitchRange = FVector2f(80.000000f, 85.000000f);
		tcr_tree_leaf_scatter1->Scale = 0.433000f;
		tcr_tree_leaf_scatter1->ScaleShowAdv = 1;
		tcr_tree_leaf_scatter1->Cook();
	}
	SetGeoResult(UTcrFern02::output0, tcr_tree_leaf_scatter1->GetGeoResult(0));
}

