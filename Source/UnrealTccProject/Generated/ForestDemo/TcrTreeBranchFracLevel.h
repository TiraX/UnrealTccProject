// Auto generated by UnrealTcc. 

#pragma once

#include "CoreMinimal.h"
#include "TccNode.h"
#include "TccRecipeGeoDefine.h"
#include "TccRamp.h"
#include "TcrTreeBranchFracLevel.generated.h"

UCLASS()
class UNREALTCCPROJECT_API UTcrTreeBranchFracLevel : public UTccRecipeGeoDefine
{
	GENERATED_BODY()
public:
	enum EOutputs
	{
		output0,  // From foreach_begin2
		OUT_Count,
	};

	const FString SOutputs[OUT_Count] = 
	{
		TEXT("output0"),
	};

	UTcrTreeBranchFracLevel() ;

	virtual FTccNodePtr CreateNode() override;
	virtual void SyncParams(FTccNodePtr InNode) override;

	// Force Ramp
	UPROPERTY(EditAnywhere)
	FTccRampFloat ForceRamp = ETccRampInterp::Linear;

	// Radius Shape
	UPROPERTY(EditAnywhere)
	FTccRampFloat RadiusShape = ETccRampInterp::Linear;

	// Seed
	UPROPERTY(EditAnywhere)
	int32 Gseed = 0;

	// Seperation
	UPROPERTY(EditAnywhere)
	float Sep = 0.200000f;

	// Split Distance
	UPROPERTY(EditAnywhere)
	float SplitDis = 3.500000f;

	// Split Angle
	UPROPERTY(EditAnywhere)
	float Angle = 15.000000f;

	// Roll
	UPROPERTY(EditAnywhere)
	float Roll = 15.000000f;

	// Force
	UPROPERTY(EditAnywhere)
	float Force = 0.050000f;

};

class FTccForBlock;
class FTccVex;
class UNREALTCCPROJECT_API FTcrTreeBranchFracLevel : public FTccNode
{
public:
	FTcrTreeBranchFracLevel() ;
	virtual ~FTcrTreeBranchFracLevel() ;

	virtual void Cook() override;

	// Force Ramp
	FTccRampFloat ForceRamp = ETccRampInterp::Linear;

	// Radius Shape
	FTccRampFloat RadiusShape = ETccRampInterp::Linear;

	// Seed
	int32 Gseed = 0;

	// Seperation
	float Sep = 0.200000f;

	// Split Distance
	float SplitDis = 3.500000f;

	// Split Angle
	float Angle = 15.000000f;

	// Roll
	float Roll = 15.000000f;

	// Force
	float Force = 0.050000f;

	FTccForBlock* foreach_begin2 = nullptr;

	FTccVex* frac = nullptr;

};

