// Auto generated by UnrealTcc. 

#pragma once

#include "CoreMinimal.h"
#include "TccNode.h"
#include "TccRecipeGeoDefine.h"
#include "TccRamp.h"
#include "TcrTreeSkinGrowth.generated.h"

UCLASS()
class UNREALTCCPROJECT_API UTcrTreeSkinGrowth : public UTccRecipeGeoDefine
{
	GENERATED_BODY()
public:
	enum EOutputs
	{
		output0,  // From tcc_normal2
		OUT_Count,
	};
	enum ENoise
	{
		None,
		Perlin,
		Worley,
	};

	const FString SOutputs[OUT_Count] = 
	{
		TEXT("output0"),
	};

	UTcrTreeSkinGrowth() ;

	virtual FTccNodePtr CreateNode() override;
	virtual void SyncParams(FTccNodePtr InNode) override;

	// Seed
	UPROPERTY(EditAnywhere)
	int32 Gseed = 0;

	// Tube Columns
	UPROPERTY(EditAnywhere)
	int32 Cols = 36;

	// Partial Twist
	UPROPERTY(EditAnywhere)
	float Incroll = 0.000000f;

	// Noise
	UPROPERTY(EditAnywhere)
	int32 Noise = UTcrTreeSkinGrowth::None;

	// Amp
	UPROPERTY(EditAnywhere)
	float Amp = 0.100000f;

	// Noise Freq
	UPROPERTY(EditAnywhere)
	FVector3f Freq = FVector3f(1.000000f, 1.000000f, 1.000000f);

};

class FTccPolyWire;
class FTccNormal;
class FTccSwitch;
class FTccVex;
class FTccAttribDelete;
class UNREALTCCPROJECT_API FTcrTreeSkinGrowth : public FTccNode
{
public:
	FTcrTreeSkinGrowth() ;
	virtual ~FTcrTreeSkinGrowth() ;

	virtual void Cook() override;

	// Seed
	int32 Gseed = 0;

	// Tube Columns
	int32 Cols = 36;

	// Partial Twist
	float Incroll = 0.000000f;

	// Noise
	int32 Noise = UTcrTreeSkinGrowth::None;

	// Amp
	float Amp = 0.100000f;

	// Noise Freq
	FVector3f Freq = FVector3f(1.000000f, 1.000000f, 1.000000f);

	FTccPolyWire* tcc_poly_wire1 = nullptr;

	FTccNormal* tcc_normal1 = nullptr;

	FTccSwitch* noise = nullptr;

	FTccVex* noise_perlin = nullptr;

	FTccVex* noise_worley = nullptr;

	FTccAttribDelete* tcc_attrib_delete1 = nullptr;

	FTccNormal* tcc_normal2 = nullptr;

};

