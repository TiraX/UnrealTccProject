// Auto generated by UnrealTcc. 

#include "TcrTreeFallenLeaf.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrTreeBranchGrowth.h"
#include "TcrTreeSkinGrowth.h"
#include "TcrTreeSimpleLeaf.h"
#include "TcrTreeLeafScatter.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeFallenLeaf::UTcrTreeFallenLeaf() 
{
}
FTccNodePtr UTcrTreeFallenLeaf::CreateNode() 
{
	TSharedPtr<FTcrTreeFallenLeaf> Node = MakeShared<FTcrTreeFallenLeaf>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeFallenLeaf::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeFallenLeaf> Node = StaticCastSharedPtr<FTcrTreeFallenLeaf>(InNode);
	Node->Gseed = Gseed;
}

 FTcrTreeFallenLeaf::FTcrTreeFallenLeaf() 
{
	InitInputsCount(0);
	tcr_tree_trunk_growth1 = new FTcrTreeTrunkGrowth();
	tcr_tree_trunk_growth1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_branch_growth3 = new FTcrTreeBranchGrowth();
	tcr_tree_branch_growth3->InitMultiRefs(true); // RefCount = 2
	tcr_tree_skin_growth1 = new FTcrTreeSkinGrowth();
	tcr_tree_skin_growth1->InitMultiRefs(false); // RefCount = 1
	mi_leaf = new FTccUnrealMaterial();
	mi_leaf->InitMultiRefs(false); // RefCount = 1
	tcc_pack1 = new FTccPack();
	tcc_pack1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_simple_leaf1 = new FTcrTreeSimpleLeaf();
	tcr_tree_simple_leaf1->InitMultiRefs(false); // RefCount = 1
	mi_leaf1 = new FTccUnrealMaterial();
	mi_leaf1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter2 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter2->InitMultiRefs(false); // RefCount = 1
	tcc_merge1 = new FTccMerge();
	tcc_merge1->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeFallenLeaf::~FTcrTreeFallenLeaf() 
{
	delete tcr_tree_trunk_growth1; 
	delete tcr_tree_branch_growth3; 
	delete tcr_tree_skin_growth1; 
	delete mi_leaf; 
	delete tcc_pack1; 
	delete tcr_tree_simple_leaf1; 
	delete mi_leaf1; 
	delete tcr_tree_leaf_scatter2; 
	delete tcc_merge1; 
}
void FTcrTreeFallenLeaf::Cook() 
{
	{
		// Node: tcr_tree_trunk_growth1
		tcr_tree_trunk_growth1->RadiusShape = ETccRampInterp::Bezier;
		tcr_tree_trunk_growth1->RadiusShape.ResizeRampPoints(3);
		tcr_tree_trunk_growth1->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_trunk_growth1->RadiusShape.AddRampPoint(0.1440f, 0.8542f);
		tcr_tree_trunk_growth1->RadiusShape.AddRampPoint(1.0000f, 0.5000f);
		tcr_tree_trunk_growth1->TreeAge = 5.670000f;
		tcr_tree_trunk_growth1->MaxAge = 0.100000f;
		tcr_tree_trunk_growth1->Radius = 0.060000f;
		tcr_tree_trunk_growth1->Cook();
	}
	{
		// Node: tcr_tree_branch_growth3
		tcr_tree_branch_growth3->SetInput(0, tcr_tree_trunk_growth1);
		tcr_tree_branch_growth3->MaxCountRamp = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->MaxCountRamp.ResizeRampPoints(2);
		tcr_tree_branch_growth3->MaxCountRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->MaxCountRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_branch_growth3->SegLenRamp = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->SegLenRamp.ResizeRampPoints(2);
		tcr_tree_branch_growth3->SegLenRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->SegLenRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_branch_growth3->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_branch_growth3->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_branch_growth3->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_branch_growth3->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_branch_growth3->MaxAgeRamp = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->MaxAgeRamp.ResizeRampPoints(2);
		tcr_tree_branch_growth3->MaxAgeRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->MaxAgeRamp.AddRampPoint(1.0000f, 0.2000f);
		tcr_tree_branch_growth3->RadiusShape = ETccRampInterp::Bezier;
		tcr_tree_branch_growth3->RadiusShape.ResizeRampPoints(3);
		tcr_tree_branch_growth3->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->RadiusShape.AddRampPoint(0.1522f, 0.7708f);
		tcr_tree_branch_growth3->RadiusShape.AddRampPoint(1.0000f, 0.3333f);
		tcr_tree_branch_growth3->Pitch0Ramp = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->Pitch0Ramp.ResizeRampPoints(2);
		tcr_tree_branch_growth3->Pitch0Ramp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->Pitch0Ramp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_branch_growth3->Pitch1Ramp = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->Pitch1Ramp.ResizeRampPoints(2);
		tcr_tree_branch_growth3->Pitch1Ramp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_branch_growth3->Pitch1Ramp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_branch_growth3->Soft = ETccRampInterp::Linear;
		tcr_tree_branch_growth3->Soft.ResizeRampPoints(2);
		tcr_tree_branch_growth3->Soft.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_branch_growth3->Soft.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_branch_growth3->MaxCount = 1;
		tcr_tree_branch_growth3->StartPercent = 0.000000f;
		tcr_tree_branch_growth3->MaxAge = 1.360000f;
		tcr_tree_branch_growth3->Pitch1 = 159.000000f;
		tcr_tree_branch_growth3->PitchLerpRange = FVector2f(0.000000f, 1.650000f);
		tcr_tree_branch_growth3->Cook();
	}
	{
		// Node: tcr_tree_skin_growth1
		tcr_tree_skin_growth1->SetInput(0, tcr_tree_branch_growth3);
		tcr_tree_skin_growth1->Cook();
	}
	{
		// Node: mi_leaf
		mi_leaf->SetInput(0, tcr_tree_skin_growth1);
		mi_leaf->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf->Cook();
	}
	{
		// Node: tcc_pack1
		tcc_pack1->SetInput(0, mi_leaf);
		tcc_pack1->GeoName = TEXT("fallen_leaf_stem");
		tcc_pack1->Cook();
	}
	{
		// Node: tcr_tree_simple_leaf1
		tcr_tree_simple_leaf1->Shape = ETccRampInterp::Bezier;
		tcr_tree_simple_leaf1->Shape.ResizeRampPoints(10);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.0000f, 0.0365f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.0317f, 0.1354f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.1528f, 0.0000f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.1667f, 0.0120f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.2107f, 0.0120f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.2656f, 0.0000f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.3536f, 0.1406f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.5918f, 0.7917f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.8912f, 0.7500f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(1.0000f, 0.0000f);
		tcr_tree_simple_leaf1->Size = FVector2f(0.200000f, 1.600000f);
		tcr_tree_simple_leaf1->Rows = 27;
		tcr_tree_simple_leaf1->Bend = -31.000000f;
		tcr_tree_simple_leaf1->EnableCurl = 0;
		tcr_tree_simple_leaf1->Cook();
	}
	{
		// Node: mi_leaf1
		mi_leaf1->SetInput(0, tcr_tree_simple_leaf1);
		mi_leaf1->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf1->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter2
		tcr_tree_leaf_scatter2->SetInput(0, tcr_tree_branch_growth3);
		tcr_tree_leaf_scatter2->SetInput(1, mi_leaf1);
		tcr_tree_leaf_scatter2->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter2->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter2->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->ScaleAlongBranch.ResizeRampPoints(6);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(0.0000f, 0.3333f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(0.2520f, 0.4740f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(0.4043f, 0.5365f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(0.5925f, 0.6094f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(0.8101f, 0.7865f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->Gseed = int32(Gseed);
		tcr_tree_leaf_scatter2->StartPercent = 0.750000f;
		tcr_tree_leaf_scatter2->AgeDis = 0.012000f;
		tcr_tree_leaf_scatter2->Mirror = 1;
		tcr_tree_leaf_scatter2->DropR = 0.028000f;
		tcr_tree_leaf_scatter2->Yaw = FVector2f(50.000000f, -94.000000f);
		tcr_tree_leaf_scatter2->PitchR = 1.800000f;
		tcr_tree_leaf_scatter2->Scale = 1.415000f;
		tcr_tree_leaf_scatter2->ScaleShowAdv = 1;
		tcr_tree_leaf_scatter2->Cook();
	}
	{
		// Node: tcc_merge1
		tcc_merge1->SetInput(0, tcc_pack1);
		tcc_merge1->SetInput(1, tcr_tree_leaf_scatter2);
		tcc_merge1->Cook();
	}
	SetGeoResult(UTcrTreeFallenLeaf::output0, tcc_merge1->GetGeoResult(0));
}

