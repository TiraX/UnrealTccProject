// Auto generated by UnrealTcc. 

#include "TcrTreeShort01.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrFernSubbranches.h"
#include "TcrTreeLeafScatter.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeShort01::UTcrTreeShort01() 
{
}
FTccNodePtr UTcrTreeShort01::CreateNode() 
{
	TSharedPtr<FTcrTreeShort01> Node = MakeShared<FTcrTreeShort01>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeShort01::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeShort01> Node = StaticCastSharedPtr<FTcrTreeShort01>(InNode);
	Node->Gseed = Gseed;
	Node->Divs = Divs;
}

 FTcrTreeShort01::FTcrTreeShort01() 
{
	InitInputsCount(0);
	tcr_tree_trunk_growth1 = new FTcrTreeTrunkGrowth();
	tcr_tree_trunk_growth1->InitMultiRefs(false); // RefCount = 1
	branch1 = new FTcrFernSubbranches();
	branch1->InitMultiRefs(false); // RefCount = 1
	instance_id1 = new FTccVex();
	instance_id1->InitMultiRefs(false); // RefCount = 1
	branch2 = new FTcrFernSubbranches();
	branch2->InitMultiRefs(false); // RefCount = 1
	instance_id2 = new FTccVex();
	instance_id2->InitMultiRefs(false); // RefCount = 1
	branch3 = new FTcrFernSubbranches();
	branch3->InitMultiRefs(false); // RefCount = 1
	instance_id3 = new FTccVex();
	instance_id3->InitMultiRefs(false); // RefCount = 1
	tcc_merge2 = new FTccMerge();
	tcc_merge2->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter1 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter1->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeShort01::~FTcrTreeShort01() 
{
	delete tcr_tree_trunk_growth1; 
	delete branch1; 
	delete instance_id1; 
	delete branch2; 
	delete instance_id2; 
	delete branch3; 
	delete instance_id3; 
	delete tcc_merge2; 
	delete tcr_tree_leaf_scatter1; 
}
void FTcrTreeShort01::Cook() 
{
	{
		// Node: tcr_tree_trunk_growth1
		tcr_tree_trunk_growth1->RadiusShape = ETccRampInterp::Bezier;
		tcr_tree_trunk_growth1->RadiusShape.ResizeRampPoints(3);
		tcr_tree_trunk_growth1->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_trunk_growth1->RadiusShape.AddRampPoint(0.1500f, 0.5000f);
		tcr_tree_trunk_growth1->RadiusShape.AddRampPoint(1.0000f, 0.5000f);
		tcr_tree_trunk_growth1->TreeAge = 0.320000f;
		tcr_tree_trunk_growth1->MaxAge = 0.320000f;
		tcr_tree_trunk_growth1->VOffset = -0.320000f;
		tcr_tree_trunk_growth1->Radius = 0.200000f;
		tcr_tree_trunk_growth1->Cook();
	}
	{
		// Node: branch1
		branch1->RadiusShape = ETccRampInterp::Bezier;
		branch1->RadiusShape.ResizeRampPoints(3);
		branch1->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		branch1->RadiusShape.AddRampPoint(0.1375f, 0.6042f);
		branch1->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		branch1->Shape = ETccRampInterp::Linear;
		branch1->Shape.ResizeRampPoints(7);
		branch1->Shape.AddRampPoint(0.0000f, 0.0885f);
		branch1->Shape.AddRampPoint(0.1040f, 0.5909f);
		branch1->Shape.AddRampPoint(0.2848f, 1.0000f);
		branch1->Shape.AddRampPoint(0.5442f, 1.0000f);
		branch1->Shape.AddRampPoint(0.7104f, 0.9091f);
		branch1->Shape.AddRampPoint(0.9264f, 0.6364f);
		branch1->Shape.AddRampPoint(1.0000f, 0.0000f);
		branch1->YawRamp = ETccRampInterp::Linear;
		branch1->YawRamp.ResizeRampPoints(3);
		branch1->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		branch1->YawRamp.AddRampPoint(0.8303f, 0.6667f);
		branch1->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		branch1->ScaleRamp = ETccRampInterp::Linear;
		branch1->ScaleRamp.ResizeRampPoints(3);
		branch1->ScaleRamp.AddRampPoint(0.0000f, 0.7333f);
		branch1->ScaleRamp.AddRampPoint(0.2799f, 1.0000f);
		branch1->ScaleRamp.AddRampPoint(1.0000f, 1.0000f);
		branch1->Gseed = 206;
		branch1->TreeAge = 2.470000f;
		branch1->Pitch0 = 37.000000f;
		branch1->Pitch1 = 72.099998f;
		branch1->PitchLerpRange = FVector2f(0.300000f, 2.890000f);
		branch1->Radius = 0.084000f;
		branch1->Size = FVector2f(0.100000f, 0.780000f);
		branch1->Rows = 20;
		branch1->StartPercent = 0.132000f;
		branch1->AgeDis = 0.115000f;
		branch1->Yaw = FVector2f(20.000000f, -82.000000f);
		branch1->YawAdv = 1;
		branch1->RollR = 3.900000f;
		branch1->Scale = 1.466000f;
		branch1->ScaleShowAdv = 1;
		branch1->Cook();
	}
	{
		// Node: instance_id1
		instance_id1->SetInput(0, branch1);
		instance_id1->Cook();
		{
			FTccGeometryPtr Geo0 = instance_id1->GetGeoRef(0);
			FTccAttribPtr attr_instance_id = Geo0->AddPackedGeoAttrib("instance_id", ETccAttribType::I);
			const int32 _numpacked = Geo0->GetNumPackedGeos();
			for(int32 i = 0; i < _numpacked; i++)
			{
				const int32 _packednum = i;
				int32& _instance_id = attr_instance_id->GetData<int32>()[i];
				_instance_id = 0;
			}
		}
	}
	{
		// Node: branch2
		branch2->RadiusShape = ETccRampInterp::Bezier;
		branch2->RadiusShape.ResizeRampPoints(3);
		branch2->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		branch2->RadiusShape.AddRampPoint(0.1392f, 0.3333f);
		branch2->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		branch2->Shape = ETccRampInterp::Linear;
		branch2->Shape.ResizeRampPoints(7);
		branch2->Shape.AddRampPoint(0.0000f, 0.0885f);
		branch2->Shape.AddRampPoint(0.1040f, 0.5909f);
		branch2->Shape.AddRampPoint(0.2848f, 1.0000f);
		branch2->Shape.AddRampPoint(0.5442f, 1.0000f);
		branch2->Shape.AddRampPoint(0.7104f, 0.9091f);
		branch2->Shape.AddRampPoint(0.9264f, 0.6364f);
		branch2->Shape.AddRampPoint(1.0000f, 0.0000f);
		branch2->YawRamp = ETccRampInterp::Linear;
		branch2->YawRamp.ResizeRampPoints(3);
		branch2->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		branch2->YawRamp.AddRampPoint(0.7496f, 0.5000f);
		branch2->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		branch2->ScaleRamp = ETccRampInterp::Linear;
		branch2->ScaleRamp.ResizeRampPoints(3);
		branch2->ScaleRamp.AddRampPoint(0.0000f, 0.7000f);
		branch2->ScaleRamp.AddRampPoint(0.1915f, 1.0000f);
		branch2->ScaleRamp.AddRampPoint(1.0000f, 1.0000f);
		branch2->TreeAge = 4.030000f;
		branch2->Pitch0 = 21.200001f;
		branch2->Pitch1 = 62.799999f;
		branch2->PitchLerpRange = FVector2f(0.300000f, 2.890000f);
		branch2->Gravity = 0.095000f;
		branch2->Radius = 0.084000f;
		branch2->Size = FVector2f(0.100000f, 0.780000f);
		branch2->Rows = 20;
		branch2->StartPercent = 0.078000f;
		branch2->AgeDis = 0.150000f;
		branch2->Yaw = FVector2f(0.000000f, -84.000000f);
		branch2->YawAdv = 1;
		branch2->PitchR = 3.300000f;
		branch2->RollR = 18.299999f;
		branch2->Scale = 1.869000f;
		branch2->ScaleShowAdv = 1;
		branch2->Cook();
	}
	{
		// Node: instance_id2
		instance_id2->SetInput(0, branch2);
		instance_id2->Cook();
		{
			FTccGeometryPtr Geo0 = instance_id2->GetGeoRef(0);
			FTccAttribPtr attr_instance_id = Geo0->AddPackedGeoAttrib("instance_id", ETccAttribType::I);
			const int32 _numpacked = Geo0->GetNumPackedGeos();
			for(int32 i = 0; i < _numpacked; i++)
			{
				const int32 _packednum = i;
				int32& _instance_id = attr_instance_id->GetData<int32>()[i];
				_instance_id = 1;
			}
		}
	}
	{
		// Node: branch3
		branch3->RadiusShape = ETccRampInterp::Bezier;
		branch3->RadiusShape.ResizeRampPoints(3);
		branch3->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		branch3->RadiusShape.AddRampPoint(0.1392f, 0.3333f);
		branch3->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		branch3->Shape = ETccRampInterp::Linear;
		branch3->Shape.ResizeRampPoints(7);
		branch3->Shape.AddRampPoint(0.0000f, 0.0885f);
		branch3->Shape.AddRampPoint(0.1040f, 0.5909f);
		branch3->Shape.AddRampPoint(0.2848f, 1.0000f);
		branch3->Shape.AddRampPoint(0.5442f, 1.0000f);
		branch3->Shape.AddRampPoint(0.7104f, 0.9091f);
		branch3->Shape.AddRampPoint(0.9264f, 0.6364f);
		branch3->Shape.AddRampPoint(1.0000f, 0.0000f);
		branch3->YawRamp = ETccRampInterp::Linear;
		branch3->YawRamp.ResizeRampPoints(3);
		branch3->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		branch3->YawRamp.AddRampPoint(0.5714f, 0.2667f);
		branch3->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		branch3->ScaleRamp = ETccRampInterp::Linear;
		branch3->ScaleRamp.ResizeRampPoints(4);
		branch3->ScaleRamp.AddRampPoint(0.0000f, 0.7000f);
		branch3->ScaleRamp.AddRampPoint(0.0884f, 0.9333f);
		branch3->ScaleRamp.AddRampPoint(0.2422f, 1.0000f);
		branch3->ScaleRamp.AddRampPoint(1.0000f, 1.0000f);
		branch3->TreeAge = 3.510000f;
		branch3->Pitch0 = 13.600000f;
		branch3->Pitch1 = 41.700001f;
		branch3->PitchLerpRange = FVector2f(0.300000f, 2.890000f);
		branch3->Radius = 0.084000f;
		branch3->Size = FVector2f(0.100000f, 0.780000f);
		branch3->Rows = 20;
		branch3->StartPercent = 0.158000f;
		branch3->AgeDis = 0.150000f;
		branch3->Yaw = FVector2f(20.000000f, -84.000000f);
		branch3->YawAdv = 1;
		branch3->PitchR = 3.300000f;
		branch3->RollR = 18.299999f;
		branch3->Scale = 1.869000f;
		branch3->ScaleShowAdv = 1;
		branch3->Cook();
	}
	{
		// Node: instance_id3
		instance_id3->SetInput(0, branch3);
		instance_id3->Cook();
		{
			FTccGeometryPtr Geo0 = instance_id3->GetGeoRef(0);
			FTccAttribPtr attr_instance_id = Geo0->AddPackedGeoAttrib("instance_id", ETccAttribType::I);
			const int32 _numpacked = Geo0->GetNumPackedGeos();
			for(int32 i = 0; i < _numpacked; i++)
			{
				const int32 _packednum = i;
				int32& _instance_id = attr_instance_id->GetData<int32>()[i];
				_instance_id = 2;
			}
		}
	}
	{
		// Node: tcc_merge2
		tcc_merge2->SetInput(0, instance_id1);
		tcc_merge2->SetInput(1, instance_id2);
		tcc_merge2->SetInput(2, instance_id3);
		tcc_merge2->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter1
		tcr_tree_leaf_scatter1->SetInput(0, tcr_tree_trunk_growth1);
		tcr_tree_leaf_scatter1->SetInput(1, tcc_merge2);
		tcr_tree_leaf_scatter1->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongBranch.ResizeRampPoints(6);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0000f, 0.5333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.2553f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.6481f, 0.6333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.7496f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.9345f, 0.6000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->Gseed = 2;
		tcr_tree_leaf_scatter1->AgeDis = 0.050000f;
		tcr_tree_leaf_scatter1->UseInstanceId = 1;
		tcr_tree_leaf_scatter1->Method = UTcrTreeLeafScatter::AroundBranch;
		tcr_tree_leaf_scatter1->AroundRange = FVector2f(-60.000000f, 60.000000f);
		tcr_tree_leaf_scatter1->YawSep = 89.599998f;
		tcr_tree_leaf_scatter1->PitchRange = FVector2f(4.900000f, -12.000000f);
		tcr_tree_leaf_scatter1->Scale = 0.451000f;
		tcr_tree_leaf_scatter1->ScaleShowAdv = 1;
		tcr_tree_leaf_scatter1->Cook();
	}
	SetGeoResult(UTcrTreeShort01::output0, tcr_tree_leaf_scatter1->GetGeoResult(0));
}

