// Auto generated by UnrealTcc. 

#include "TcrTreeShort01.h"
#include "TcrTreeSimpleLeaf.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeShort01::UTcrTreeShort01() 
{
}
FTccNodePtr UTcrTreeShort01::CreateNode() 
{
	TSharedPtr<FTcrTreeShort01> Node = MakeShared<FTcrTreeShort01>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeShort01::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeShort01> Node = StaticCastSharedPtr<FTcrTreeShort01>(InNode);
	Node->Gseed = Gseed;
	Node->Divs = Divs;
}

 FTcrTreeShort01::FTcrTreeShort01() 
{
	InitInputsCount(0);
	tcr_tree_simple_leaf1 = new FTcrTreeSimpleLeaf();
	tcr_tree_simple_leaf1->InitMultiRefs(false); // RefCount = 1
	tcc_polyextrude1 = new FTccPolyextrude();
	tcc_polyextrude1->InitMultiRefs(false); // RefCount = 1
	tcc_attrib_blur1 = new FTccAttribBlur();
	tcc_attrib_blur1->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeShort01::~FTcrTreeShort01() 
{
	delete tcr_tree_simple_leaf1; 
	delete tcc_polyextrude1; 
	delete tcc_attrib_blur1; 
}
void FTcrTreeShort01::Cook() 
{
	{
		// Node: tcr_tree_simple_leaf1
		tcr_tree_simple_leaf1->Shape = ETccRampInterp::Linear;
		tcr_tree_simple_leaf1->Shape.ResizeRampPoints(7);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.0000f, 0.0885f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.1035f, 0.7708f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.3643f, 1.0000f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.5442f, 1.0000f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.7965f, 0.8125f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.9337f, 0.1667f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(1.0000f, 0.0000f);
		tcr_tree_simple_leaf1->Size = FVector2f(0.500000f, 1.000000f);
		tcr_tree_simple_leaf1->Rows = 12;
		tcr_tree_simple_leaf1->Cols = 8;
		tcr_tree_simple_leaf1->BendOffset = 0.345000f;
		tcr_tree_simple_leaf1->Curl = 21.900000f;
		tcr_tree_simple_leaf1->Cook();
	}
	{
		// Node: tcc_polyextrude1
		tcc_polyextrude1->SetInput(0, tcr_tree_simple_leaf1);
		tcc_polyextrude1->Dist = 0.025000f;
		tcc_polyextrude1->Divs = int32(Divs);
		tcc_polyextrude1->Outputback = 1;
		tcc_polyextrude1->Cook();
	}
	{
		// Node: tcc_attrib_blur1
		tcc_attrib_blur1->SetInput(0, tcc_polyextrude1);
		tcc_attrib_blur1->Cook();
	}
	SetGeoResult(UTcrTreeShort01::output0, tcc_attrib_blur1->GetGeoResult(0));
}

