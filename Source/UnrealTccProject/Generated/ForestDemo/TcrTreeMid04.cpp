// Auto generated by UnrealTcc. 

#include "TcrTreeMid04.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrTreeSkinGrowth.h"
#include "TcrTreeSimpleLeaf.h"
#include "TcrTreeLeafScatter.h"
#include "TcrTreeFallenLeaf.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeMid04::UTcrTreeMid04() 
{
}
FTccNodePtr UTcrTreeMid04::CreateNode() 
{
	TSharedPtr<FTcrTreeMid04> Node = MakeShared<FTcrTreeMid04>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeMid04::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeMid04> Node = StaticCastSharedPtr<FTcrTreeMid04>(InNode);
}

 FTcrTreeMid04::FTcrTreeMid04() 
{
	InitInputsCount(0);
	trunk = new FTcrTreeTrunkGrowth();
	trunk->InitMultiRefs(true); // RefCount = 3
	trunk_skin = new FTcrTreeSkinGrowth();
	trunk_skin->InitMultiRefs(false); // RefCount = 1
	mi_trunk = new FTccUnrealMaterial();
	mi_trunk->InitMultiRefs(false); // RefCount = 1
	tcc_pack1 = new FTccPack();
	tcc_pack1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_simple_leaf1 = new FTcrTreeSimpleLeaf();
	tcr_tree_simple_leaf1->InitMultiRefs(false); // RefCount = 1
	mi_leaf = new FTccUnrealMaterial();
	mi_leaf->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter2 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter2->InitMultiRefs(false); // RefCount = 1
	tcr_tree_fallen_leaf = new FTcrTreeFallenLeaf();
	tcr_tree_fallen_leaf->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter1 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter1->InitMultiRefs(false); // RefCount = 1
	tcc_merge1 = new FTccMerge();
	tcc_merge1->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeMid04::~FTcrTreeMid04() 
{
	delete trunk; 
	delete trunk_skin; 
	delete mi_trunk; 
	delete tcc_pack1; 
	delete tcr_tree_simple_leaf1; 
	delete mi_leaf; 
	delete tcr_tree_leaf_scatter2; 
	delete tcr_tree_fallen_leaf; 
	delete tcr_tree_leaf_scatter1; 
	delete tcc_merge1; 
}
void FTcrTreeMid04::Cook() 
{
	{
		// Node: trunk
		trunk->RadiusShape = ETccRampInterp::Bezier;
		trunk->RadiusShape.ResizeRampPoints(3);
		trunk->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		trunk->RadiusShape.AddRampPoint(0.1488f, 0.6667f);
		trunk->RadiusShape.AddRampPoint(1.0000f, 0.3125f);
		trunk->TreeAge = 11.720000f;
		trunk->MaxAge = 2.710000f;
		trunk->SegLen = 0.200000f;
		trunk->Radius = 0.140000f;
		trunk->CurlForce = 0.122000f;
		trunk->CurlFreq = 0.380000f;
		trunk->Cook();
	}
	{
		// Node: trunk_skin
		trunk_skin->SetInput(0, trunk);
		trunk_skin->Cols = 12;
		trunk_skin->Cook();
	}
	{
		// Node: mi_trunk
		mi_trunk->SetInput(0, trunk_skin);
		mi_trunk->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Trunk.MI_TreeBig_Trunk");
		mi_trunk->Cook();
	}
	{
		// Node: tcc_pack1
		tcc_pack1->SetInput(0, mi_trunk);
		tcc_pack1->GeoName = TEXT("mid04_trunk");
		tcc_pack1->Cook();
	}
	{
		// Node: tcr_tree_simple_leaf1
		tcr_tree_simple_leaf1->Shape = ETccRampInterp::Linear;
		tcr_tree_simple_leaf1->Shape.ResizeRampPoints(7);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.0000f, 0.0600f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.1035f, 0.7708f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.3536f, 1.0000f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.5488f, 0.8958f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.7952f, 0.5417f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(0.9337f, 0.1667f);
		tcr_tree_simple_leaf1->Shape.AddRampPoint(1.0000f, 0.0000f);
		tcr_tree_simple_leaf1->Size = FVector2f(0.310000f, 1.250000f);
		tcr_tree_simple_leaf1->Rows = 13;
		tcr_tree_simple_leaf1->Bend = -58.200001f;
		tcr_tree_simple_leaf1->BendOffset = 0.458000f;
		tcr_tree_simple_leaf1->Curl = 28.700001f;
		tcr_tree_simple_leaf1->Cook();
	}
	{
		// Node: mi_leaf
		mi_leaf->SetInput(0, tcr_tree_simple_leaf1);
		mi_leaf->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter2
		tcr_tree_leaf_scatter2->SetInput(0, trunk);
		tcr_tree_leaf_scatter2->SetInput(1, mi_leaf);
		tcr_tree_leaf_scatter2->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter2->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter2->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->ScaleAlongBranch.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter2->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter2->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter2->MaxCount = 51;
		tcr_tree_leaf_scatter2->AgeDis = 0.048000f;
		tcr_tree_leaf_scatter2->RadiusShrink = 1.000000f;
		tcr_tree_leaf_scatter2->Method = UTcrTreeLeafScatter::AroundBranch;
		tcr_tree_leaf_scatter2->PitchRange = FVector2f(88.000000f, 88.000000f);
		tcr_tree_leaf_scatter2->Scale = 0.497000f;
		tcr_tree_leaf_scatter2->Cook();
	}
	{
		// Node: tcr_tree_fallen_leaf
		tcr_tree_fallen_leaf->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter1
		tcr_tree_leaf_scatter1->SetInput(0, trunk);
		tcr_tree_leaf_scatter1->SetInput(1, tcr_tree_fallen_leaf);
		tcr_tree_leaf_scatter1->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongBranch.ResizeRampPoints(3);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0000f, 0.7667f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.4043f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(1.0000f, 0.8333f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercent = 0.536000f;
		tcr_tree_leaf_scatter1->RadiusShrink = 0.409000f;
		tcr_tree_leaf_scatter1->Method = UTcrTreeLeafScatter::AroundBranch;
		tcr_tree_leaf_scatter1->PitchRange = FVector2f(0.000000f, 0.000000f);
		tcr_tree_leaf_scatter1->Scale = 0.778000f;
		tcr_tree_leaf_scatter1->ScaleShowAdv = 1;
		tcr_tree_leaf_scatter1->Cook();
	}
	{
		// Node: tcc_merge1
		tcc_merge1->SetInput(0, tcc_pack1);
		tcc_merge1->SetInput(1, tcr_tree_leaf_scatter2);
		tcc_merge1->SetInput(2, tcr_tree_leaf_scatter1);
		tcc_merge1->Cook();
	}
	SetGeoResult(UTcrTreeMid04::output0, tcc_merge1->GetGeoResult(0));
}

