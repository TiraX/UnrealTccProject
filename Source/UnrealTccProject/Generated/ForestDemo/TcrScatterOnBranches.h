// Auto generated by UnrealTcc. 

#pragma once

#include "CoreMinimal.h"
#include "TccNode.h"
#include "TccRecipeGeoDefine.h"
#include "TccRamp.h"
#include "TcrScatterOnBranches.generated.h"

UCLASS()
class UNREALTCCPROJECT_API UTcrScatterOnBranches : public UTccRecipeGeoDefine
{
	GENERATED_BODY()
public:
	enum EOutputs
	{
		output0,  // From transform
		OUT_Count,
	};

	const FString SOutputs[OUT_Count] = 
	{
		TEXT("output0"),
	};

	UTcrScatterOnBranches() ;

	virtual FTccNodePtr CreateNode() override;
	virtual void SyncParams(FTccNodePtr InNode) override;

	// Seed
	UPROPERTY(EditAnywhere)
	int32 Gseed = 0;

	// Scale Min
	UPROPERTY(EditAnywhere)
	FVector3f ScaleMin = FVector3f(1.000000f, 1.000000f, 1.000000f);

	// Scale Max
	UPROPERTY(EditAnywhere)
	FVector3f ScaleMax = FVector3f(1.000000f, 1.000000f, 1.000000f);

};

class FTccAttribDelete;
class FTccBlastByFeature;
class FTccPolyFrame;
class FTccForBlock;
class FTccVex;
class FTccScatter;
class UNREALTCCPROJECT_API FTcrScatterOnBranches : public FTccNode
{
public:
	FTcrScatterOnBranches() ;
	virtual ~FTcrScatterOnBranches() ;

	virtual void Cook() override;

	// Seed
	int32 Gseed = 0;

	// Scale Min
	FVector3f ScaleMin = FVector3f(1.000000f, 1.000000f, 1.000000f);

	// Scale Max
	FVector3f ScaleMax = FVector3f(1.000000f, 1.000000f, 1.000000f);

	FTccAttribDelete* remove_attr_radius = nullptr;

	FTccBlastByFeature* keep_level_1_lines_only = nullptr;

	FTccPolyFrame* tangentu = nullptr;

	FTccForBlock* foreach_begin1 = nullptr;

	FTccVex* tcc_vex1 = nullptr;

	FTccScatter* tcc_scatter1 = nullptr;

	FTccVex* transform = nullptr;

};

