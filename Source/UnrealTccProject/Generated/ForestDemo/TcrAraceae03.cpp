// Auto generated by UnrealTcc. 

#include "TcrAraceae03.h"
#include "TcrTreeTrunkGrowth.h"
#include "TcrTreeBranchGrowth.h"
#include "TcrTreeSkinGrowth.h"
#include "TcrBroadLeaf.h"
#include "TcrTreeLeafScatter.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrAraceae03::UTcrAraceae03() 
{
}
FTccNodePtr UTcrAraceae03::CreateNode() 
{
	TSharedPtr<FTcrAraceae03> Node = MakeShared<FTcrAraceae03>();
	SyncParams(Node);
	return Node;
}
void UTcrAraceae03::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrAraceae03> Node = StaticCastSharedPtr<FTcrAraceae03>(InNode);
	Node->Gseed = Gseed;
}

 FTcrAraceae03::FTcrAraceae03() 
{
	InitInputsCount(0);
	trunk = new FTcrTreeTrunkGrowth();
	trunk->InitMultiRefs(true); // RefCount = 2
	branch = new FTcrTreeBranchGrowth();
	branch->InitMultiRefs(true); // RefCount = 2
	tcc_merge2 = new FTccMerge();
	tcc_merge2->InitMultiRefs(false); // RefCount = 1
	tcr_tree_skin_growth1 = new FTcrTreeSkinGrowth();
	tcr_tree_skin_growth1->InitMultiRefs(false); // RefCount = 1
	mi_trunk = new FTccUnrealMaterial();
	mi_trunk->InitMultiRefs(false); // RefCount = 1
	tcc_pack3 = new FTccPack();
	tcc_pack3->InitMultiRefs(false); // RefCount = 1
	leaf1 = new FTcrBroadLeaf();
	leaf1->InitMultiRefs(false); // RefCount = 1
	mi_leaf1 = new FTccUnrealMaterial();
	mi_leaf1->InitMultiRefs(false); // RefCount = 1
	tcc_pack1 = new FTccPack();
	tcc_pack1->InitMultiRefs(false); // RefCount = 1
	leaf2 = new FTcrBroadLeaf();
	leaf2->InitMultiRefs(false); // RefCount = 1
	mi_leaf2 = new FTccUnrealMaterial();
	mi_leaf2->InitMultiRefs(false); // RefCount = 1
	tcc_pack2 = new FTccPack();
	tcc_pack2->InitMultiRefs(false); // RefCount = 1
	tcc_merge1 = new FTccMerge();
	tcc_merge1->InitMultiRefs(false); // RefCount = 1
	tcr_tree_leaf_scatter1 = new FTcrTreeLeafScatter();
	tcr_tree_leaf_scatter1->InitMultiRefs(false); // RefCount = 1
	tcc_merge3 = new FTccMerge();
	tcc_merge3->InitMultiRefs(false); // RefCount = 1
}
 FTcrAraceae03::~FTcrAraceae03() 
{
	delete trunk; 
	delete branch; 
	delete tcc_merge2; 
	delete tcr_tree_skin_growth1; 
	delete mi_trunk; 
	delete tcc_pack3; 
	delete leaf1; 
	delete mi_leaf1; 
	delete tcc_pack1; 
	delete leaf2; 
	delete mi_leaf2; 
	delete tcc_pack2; 
	delete tcc_merge1; 
	delete tcr_tree_leaf_scatter1; 
	delete tcc_merge3; 
}
void FTcrAraceae03::Cook() 
{
	{
		// Node: trunk
		trunk->RadiusShape = ETccRampInterp::Bezier;
		trunk->RadiusShape.ResizeRampPoints(3);
		trunk->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		trunk->RadiusShape.AddRampPoint(0.1500f, 0.5000f);
		trunk->RadiusShape.AddRampPoint(1.0000f, 0.5000f);
		trunk->TreeAge = 6.640000f;
		trunk->MaxAge = 1.460000f;
		trunk->Radius = 0.020000f;
		trunk->CurlForce = 0.206000f;
		trunk->CurlFreq = 3.300000f;
		trunk->Cook();
	}
	{
		// Node: branch
		branch->SetInput(0, trunk);
		branch->MaxCountRamp = ETccRampInterp::Linear;
		branch->MaxCountRamp.ResizeRampPoints(2);
		branch->MaxCountRamp.AddRampPoint(0.0000f, 1.0000f);
		branch->MaxCountRamp.AddRampPoint(1.0000f, 1.0000f);
		branch->SegLenRamp = ETccRampInterp::Linear;
		branch->SegLenRamp.ResizeRampPoints(2);
		branch->SegLenRamp.AddRampPoint(0.0000f, 1.0000f);
		branch->SegLenRamp.AddRampPoint(1.0000f, 1.0000f);
		branch->StartPercentRamp = ETccRampInterp::Linear;
		branch->StartPercentRamp.ResizeRampPoints(2);
		branch->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		branch->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		branch->AgeDisRamp = ETccRampInterp::Linear;
		branch->AgeDisRamp.ResizeRampPoints(2);
		branch->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		branch->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		branch->MaxAgeRamp = ETccRampInterp::Linear;
		branch->MaxAgeRamp.ResizeRampPoints(5);
		branch->MaxAgeRamp.AddRampPoint(0.0000f, 0.7000f);
		branch->MaxAgeRamp.AddRampPoint(0.1956f, 0.6667f);
		branch->MaxAgeRamp.AddRampPoint(0.4403f, 1.0000f);
		branch->MaxAgeRamp.AddRampPoint(0.7675f, 0.6000f);
		branch->MaxAgeRamp.AddRampPoint(1.0000f, 0.3333f);
		branch->RadiusShape = ETccRampInterp::Bezier;
		branch->RadiusShape.ResizeRampPoints(3);
		branch->RadiusShape.AddRampPoint(0.0000f, 1.0000f);
		branch->RadiusShape.AddRampPoint(0.1506f, 0.2500f);
		branch->RadiusShape.AddRampPoint(1.0000f, 0.2500f);
		branch->Pitch0Ramp = ETccRampInterp::Linear;
		branch->Pitch0Ramp.ResizeRampPoints(2);
		branch->Pitch0Ramp.AddRampPoint(0.0000f, 1.0000f);
		branch->Pitch0Ramp.AddRampPoint(1.0000f, 1.0000f);
		branch->Pitch1Ramp = ETccRampInterp::Linear;
		branch->Pitch1Ramp.ResizeRampPoints(2);
		branch->Pitch1Ramp.AddRampPoint(0.0000f, 1.0000f);
		branch->Pitch1Ramp.AddRampPoint(1.0000f, 1.0000f);
		branch->Soft = ETccRampInterp::Linear;
		branch->Soft.ResizeRampPoints(2);
		branch->Soft.AddRampPoint(0.0000f, 0.0000f);
		branch->Soft.AddRampPoint(1.0000f, 1.0000f);
		branch->Gseed = 47;
		branch->StartPercent = 0.451000f;
		branch->AgeDis = 0.200000f;
		branch->MaxAge = 1.250000f;
		branch->MaxAgeShowAdv = 1;
		branch->MaxAgeAdv = 1;
		branch->AroundRange = FVector2f(-80.000000f, 80.000000f);
		branch->Yaw = 11.000000f;
		branch->Pitch0 = 9.100000f;
		branch->Pitch1 = 19.799999f;
		branch->PitchLerpRange = FVector2f(0.000000f, 1.010000f);
		branch->Cook();
	}
	{
		// Node: tcc_merge2
		tcc_merge2->SetInput(0, trunk);
		tcc_merge2->SetInput(1, branch);
		tcc_merge2->Cook();
	}
	{
		// Node: tcr_tree_skin_growth1
		tcr_tree_skin_growth1->SetInput(0, tcc_merge2);
		tcr_tree_skin_growth1->Cook();
	}
	{
		// Node: mi_trunk
		mi_trunk->SetInput(0, tcr_tree_skin_growth1);
		mi_trunk->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Trunk.MI_TreeBig_Trunk");
		mi_trunk->Cook();
	}
	{
		// Node: tcc_pack3
		tcc_pack3->SetInput(0, mi_trunk);
		tcc_pack3->GeoName = TEXT("trunk");
		tcc_pack3->Cook();
	}
	{
		// Node: leaf1
		leaf1->RadRamp = ETccRampInterp::Linear;
		leaf1->RadRamp.ResizeRampPoints(2);
		leaf1->RadRamp.AddRampPoint(0.0000f, 1.0000f);
		leaf1->RadRamp.AddRampPoint(1.0000f, 0.0000f);
		leaf1->ShapeLeft = ETccRampInterp::Bezier;
		leaf1->ShapeLeft.ResizeRampPoints(7);
		leaf1->ShapeLeft.AddRampPoint(0.0000f, 0.1198f);
		leaf1->ShapeLeft.AddRampPoint(0.0701f, 1.0000f);
		leaf1->ShapeLeft.AddRampPoint(0.3370f, 0.5312f);
		leaf1->ShapeLeft.AddRampPoint(0.4760f, 0.7812f);
		leaf1->ShapeLeft.AddRampPoint(0.6851f, 0.4896f);
		leaf1->ShapeLeft.AddRampPoint(0.8610f, 0.9427f);
		leaf1->ShapeLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf1->YawRemapLeft = ETccRampInterp::Linear;
		leaf1->YawRemapLeft.ResizeRampPoints(2);
		leaf1->YawRemapLeft.AddRampPoint(0.0000f, 0.0000f);
		leaf1->YawRemapLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf1->ShapeRight = ETccRampInterp::Bezier;
		leaf1->ShapeRight.ResizeRampPoints(5);
		leaf1->ShapeRight.AddRampPoint(0.0000f, 0.3000f);
		leaf1->ShapeRight.AddRampPoint(0.0701f, 1.0000f);
		leaf1->ShapeRight.AddRampPoint(0.7025f, 0.8000f);
		leaf1->ShapeRight.AddRampPoint(0.8573f, 0.8667f);
		leaf1->ShapeRight.AddRampPoint(1.0000f, 1.0000f);
		leaf1->YawRemapRight = ETccRampInterp::Linear;
		leaf1->YawRemapRight.ResizeRampPoints(2);
		leaf1->YawRemapRight.AddRampPoint(0.0000f, 0.0000f);
		leaf1->YawRemapRight.AddRampPoint(1.0000f, 1.0000f);
		leaf1->ULen = 0.506000f;
		leaf1->UAngle = 17.500000f;
		leaf1->VLen = 1.912000f;
		leaf1->VSegs = 20;
		leaf1->Stem = 0.000000f;
		leaf1->UBend = 7.700000f;
		leaf1->VBend = 50.299999f;
		leaf1->VBendOffset = 0.075000f;
		leaf1->YawBeginLeft = 43.500000f;
		leaf1->YawBeginRight = 26.000000f;
		leaf1->Amp = 0.152000f;
		leaf1->Freq = 2.387000f;
		leaf1->Cook();
	}
	{
		// Node: mi_leaf1
		mi_leaf1->SetInput(0, leaf1);
		mi_leaf1->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf1->Cook();
	}
	{
		// Node: tcc_pack1
		tcc_pack1->SetInput(0, mi_leaf1);
		tcc_pack1->GeoName = TEXT("leaf1");
		tcc_pack1->EnableId = 1;
		tcc_pack1->Cook();
	}
	{
		// Node: leaf2
		leaf2->RadRamp = ETccRampInterp::Linear;
		leaf2->RadRamp.ResizeRampPoints(2);
		leaf2->RadRamp.AddRampPoint(0.0000f, 1.0000f);
		leaf2->RadRamp.AddRampPoint(1.0000f, 0.0000f);
		leaf2->ShapeLeft = ETccRampInterp::Bezier;
		leaf2->ShapeLeft.ResizeRampPoints(6);
		leaf2->ShapeLeft.AddRampPoint(0.0000f, 0.2188f);
		leaf2->ShapeLeft.AddRampPoint(0.1156f, 0.7604f);
		leaf2->ShapeLeft.AddRampPoint(0.5314f, 0.7292f);
		leaf2->ShapeLeft.AddRampPoint(0.7257f, 0.8698f);
		leaf2->ShapeLeft.AddRampPoint(0.9262f, 1.0000f);
		leaf2->ShapeLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf2->YawRemapLeft = ETccRampInterp::Linear;
		leaf2->YawRemapLeft.ResizeRampPoints(2);
		leaf2->YawRemapLeft.AddRampPoint(0.0000f, 0.0000f);
		leaf2->YawRemapLeft.AddRampPoint(1.0000f, 1.0000f);
		leaf2->ShapeRight = ETccRampInterp::Bezier;
		leaf2->ShapeRight.ResizeRampPoints(5);
		leaf2->ShapeRight.AddRampPoint(0.0000f, 0.3000f);
		leaf2->ShapeRight.AddRampPoint(0.0665f, 0.6333f);
		leaf2->ShapeRight.AddRampPoint(0.5889f, 0.5333f);
		leaf2->ShapeRight.AddRampPoint(0.7872f, 0.6333f);
		leaf2->ShapeRight.AddRampPoint(1.0000f, 1.0000f);
		leaf2->YawRemapRight = ETccRampInterp::Linear;
		leaf2->YawRemapRight.ResizeRampPoints(2);
		leaf2->YawRemapRight.AddRampPoint(0.0000f, 0.0000f);
		leaf2->YawRemapRight.AddRampPoint(1.0000f, 1.0000f);
		leaf2->ULen = 0.820000f;
		leaf2->UAngle = 13.300000f;
		leaf2->VLen = 1.910000f;
		leaf2->VSegs = 20;
		leaf2->Stem = 0.000000f;
		leaf2->UBend = 22.600000f;
		leaf2->UBendOffset = 0.221000f;
		leaf2->VBend = 60.000000f;
		leaf2->VBendOffset = 0.536000f;
		leaf2->YawBeginLeft = 8.200000f;
		leaf2->YawBeginRight = 5.700000f;
		leaf2->Amp = 0.276000f;
		leaf2->Freq = 1.114000f;
		leaf2->Cook();
	}
	{
		// Node: mi_leaf2
		mi_leaf2->SetInput(0, leaf2);
		mi_leaf2->MatPath = TEXT("/Game/ForestDemo/Materials/MI_TreeBig_Leaf.MI_TreeBig_Leaf");
		mi_leaf2->Cook();
	}
	{
		// Node: tcc_pack2
		tcc_pack2->SetInput(0, mi_leaf2);
		tcc_pack2->GeoName = TEXT("leaf2");
		tcc_pack2->EnableId = 1;
		tcc_pack2->InsId = 1;
		tcc_pack2->Cook();
	}
	{
		// Node: tcc_merge1
		tcc_merge1->SetInput(0, tcc_pack1);
		tcc_merge1->SetInput(1, tcc_pack2);
		tcc_merge1->Cook();
	}
	{
		// Node: tcr_tree_leaf_scatter1
		tcr_tree_leaf_scatter1->SetInput(0, branch);
		tcr_tree_leaf_scatter1->SetInput(1, tcc_merge1);
		tcr_tree_leaf_scatter1->StartPercentRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->StartPercentRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->StartPercentRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->AgeDisRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->AgeDisRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->YawRamp = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->YawRamp.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->YawRamp.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchRemap = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchRemap.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(0.0000f, 0.0000f);
		tcr_tree_leaf_scatter1->PitchRemap.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->PitchAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->PitchAlongTrunk.AddRampPoint(1.0000f, 0.4333f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongBranch.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongBranch.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk = ETccRampInterp::Linear;
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.ResizeRampPoints(2);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(0.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->ScaleAlongTrunk.AddRampPoint(1.0000f, 1.0000f);
		tcr_tree_leaf_scatter1->Gseed = 4;
		tcr_tree_leaf_scatter1->StartPercent = 0.996000f;
		tcr_tree_leaf_scatter1->UseInstanceId = UTcrTreeLeafScatter::Random;
		tcr_tree_leaf_scatter1->Method = UTcrTreeLeafScatter::AroundBranch;
		tcr_tree_leaf_scatter1->YawOffset = -90.000000f;
		tcr_tree_leaf_scatter1->YawOffsetR = 26.600000f;
		tcr_tree_leaf_scatter1->PitchRange = FVector2f(-43.000000f, 15.000000f);
		tcr_tree_leaf_scatter1->PitchAdv = 1;
		tcr_tree_leaf_scatter1->Scale = 0.394000f;
		tcr_tree_leaf_scatter1->ScaleShowAdv = 1;
		tcr_tree_leaf_scatter1->Cook();
	}
	{
		// Node: tcc_merge3
		tcc_merge3->SetInput(0, tcc_pack3);
		tcc_merge3->SetInput(1, tcr_tree_leaf_scatter1);
		tcc_merge3->Cook();
	}
	SetGeoResult(UTcrAraceae03::output0, tcc_merge3->GetGeoResult(0));
}

