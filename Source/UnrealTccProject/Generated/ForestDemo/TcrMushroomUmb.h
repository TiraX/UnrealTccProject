// Auto generated by UnrealTcc. 

#pragma once

#include "CoreMinimal.h"
#include "TccNode.h"
#include "TccRecipeGeoDefine.h"
#include "TccRamp.h"
#include "TcrMushroomUmb.generated.h"

UCLASS()
class UNREALTCCPROJECT_API UTcrMushroomUmb : public UTccRecipeGeoDefine
{
	GENERATED_BODY()
public:
	enum EOutputs
	{
		output0,  // From has_scatter1
		OUT_Count,
	};

	const FString SOutputs[OUT_Count] = 
	{
		TEXT("output0"),
	};

	UTcrMushroomUmb() ;

	virtual FTccNodePtr CreateNode() override;
	virtual void SyncParams(FTccNodePtr InNode) override;

	// Shape
	UPROPERTY(EditAnywhere)
	FTccRampFloat ShapeTop = ETccRampInterp::Bezier;

	// Shape
	UPROPERTY(EditAnywhere)
	FTccRampFloat ShapeBot = ETccRampInterp::Bezier;

	// Noise Ramp
	UPROPERTY(EditAnywhere)
	FTccRampFloat NoiseRamp = ETccRampInterp::Linear;

	// Density Ramp
	UPROPERTY(EditAnywhere)
	FTccRampFloat ScatterDensity = ETccRampInterp::Linear;

	// Shape
	UPROPERTY(EditAnywhere)
	FTccRampFloat SliceShape = ETccRampInterp::Bezier;

	// Seed
	UPROPERTY(EditAnywhere)
	int32 Gseed = 0;

	// Radius
	UPROPERTY(EditAnywhere)
	float R = 0.050000f;

	// Segs
	UPROPERTY(EditAnywhere)
	int32 Segs = 12;

	// Stem Intersection
	UPROPERTY(EditAnywhere)
	float StemInters = 0.005000f;

	// Height
	UPROPERTY(EditAnywhere)
	float H1 = 0.030000f;

	// Segs
	UPROPERTY(EditAnywhere)
	int32 Segs1 = 9;

	// Height
	UPROPERTY(EditAnywhere)
	float H2 = 0.020000f;

	// Segs
	UPROPERTY(EditAnywhere)
	int32 Segs2 = 4;

	// Amp
	UPROPERTY(EditAnywhere)
	float Amp = 0.000000f;

	// Freq
	UPROPERTY(EditAnywhere)
	float Freq = 1.000000f;

	// Enable
	UPROPERTY(EditAnywhere)
	int32 EnableScatter = 0;

	// Fast Remove Radius
	UPROPERTY(EditAnywhere)
	float FastRemoveR = 0.010000f;

	// Force Total Count
	UPROPERTY(EditAnywhere)
	int32 Npts = 100;

	// Rotate Range
	UPROPERTY(EditAnywhere)
	float RotRange = 0.000000f;

	// Scale
	UPROPERTY(EditAnywhere)
	float SScale = 0.500000f;

	// Scale Rand
	UPROPERTY(EditAnywhere)
	float SScaleR = 0.000000f;

	// Enable
	UPROPERTY(EditAnywhere)
	int32 EnableSlice = 0;

	// Count
	UPROPERTY(EditAnywhere)
	int32 SliceCount = 20;

	// Segs
	UPROPERTY(EditAnywhere)
	int32 SliceSegs = 8;

	// Amp H
	UPROPERTY(EditAnywhere)
	float SliceAmph = 0.050000f;

	// Freq H
	UPROPERTY(EditAnywhere)
	float SliceFreqh = 80.000000f;

	// Amp V
	UPROPERTY(EditAnywhere)
	float SliceAmpv = 0.005000f;

	// Freq V
	UPROPERTY(EditAnywhere)
	float SliceFreqv = 120.000000f;

};

class FTccVex;
class FTccCopyAndTrans;
class FTccPolyFrame;
class FTccSkin;
class FTccUnrealMaterial;
class FTccSwitch;
class FTccMerge;
class FTccNormal;
class FTccPack;
class FTccSphere;
class FTccSubdivide;
class FTccMountain;
class FTccBlastByFeature;
class FTccScatter;
class FTccAttribDelete;
class FTccInstancer;
class UNREALTCCPROJECT_API FTcrMushroomUmb : public FTccNode
{
public:
	FTcrMushroomUmb() ;
	virtual ~FTcrMushroomUmb() ;

	virtual void Cook() override;

	// Shape
	FTccRampFloat ShapeTop = ETccRampInterp::Bezier;

	// Shape
	FTccRampFloat ShapeBot = ETccRampInterp::Bezier;

	// Noise Ramp
	FTccRampFloat NoiseRamp = ETccRampInterp::Linear;

	// Density Ramp
	FTccRampFloat ScatterDensity = ETccRampInterp::Linear;

	// Shape
	FTccRampFloat SliceShape = ETccRampInterp::Bezier;

	// Seed
	int32 Gseed = 0;

	// Radius
	float R = 0.050000f;

	// Segs
	int32 Segs = 12;

	// Stem Intersection
	float StemInters = 0.005000f;

	// Height
	float H1 = 0.030000f;

	// Segs
	int32 Segs1 = 9;

	// Height
	float H2 = 0.020000f;

	// Segs
	int32 Segs2 = 4;

	// Amp
	float Amp = 0.000000f;

	// Freq
	float Freq = 1.000000f;

	// Enable
	int32 EnableScatter = 0;

	// Fast Remove Radius
	float FastRemoveR = 0.010000f;

	// Force Total Count
	int32 Npts = 100;

	// Rotate Range
	float RotRange = 0.000000f;

	// Scale
	float SScale = 0.500000f;

	// Scale Rand
	float SScaleR = 0.000000f;

	// Enable
	int32 EnableSlice = 0;

	// Count
	int32 SliceCount = 20;

	// Segs
	int32 SliceSegs = 8;

	// Amp H
	float SliceAmph = 0.050000f;

	// Freq H
	float SliceFreqh = 80.000000f;

	// Amp V
	float SliceAmpv = 0.005000f;

	// Freq V
	float SliceFreqv = 120.000000f;

	FTccVex* umbrella_line = nullptr;

	FTccVex* shape = nullptr;

	FTccCopyAndTrans* tcc_copy_and_trans1 = nullptr;

	FTccPolyFrame* tcc_poly_frame1 = nullptr;

	FTccSkin* tcc_skin3 = nullptr;

	FTccUnrealMaterial* mi_trunk = nullptr;

	FTccSwitch* enable_slice = nullptr;

	FTccVex* slice = nullptr;

	FTccCopyAndTrans* tcc_copy_and_trans2 = nullptr;

	FTccVex* slice_noise1 = nullptr;

	FTccUnrealMaterial* mi_leaf = nullptr;

	FTccMerge* merge_slice = nullptr;

	FTccSwitch* enable_noise = nullptr;

	FTccVex* apply_noise = nullptr;

	FTccNormal* tcc_normal1 = nullptr;

	FTccVex* calc_stem_info = nullptr;

	FTccVex* move_to_stem = nullptr;

	FTccMerge* tcc_merge6 = nullptr;

	FTccSwitch* has_scatter1 = nullptr;

	FTccPack* tcc_pack7 = nullptr;

	FTccSphere* tcc_sphere2 = nullptr;

	FTccSubdivide* tcc_subdivide2 = nullptr;

	FTccMountain* tcc_mountain4 = nullptr;

	FTccUnrealMaterial* mi_trunk1 = nullptr;

	FTccPack* tcc_pack4 = nullptr;

	FTccMountain* tcc_mountain5 = nullptr;

	FTccUnrealMaterial* mi_trunk2 = nullptr;

	FTccPack* tcc_pack5 = nullptr;

	FTccMountain* tcc_mountain6 = nullptr;

	FTccUnrealMaterial* mi_trunk3 = nullptr;

	FTccPack* tcc_pack6 = nullptr;

	FTccMerge* tcc_merge4 = nullptr;

	FTccBlastByFeature* keep_top_only1 = nullptr;

	FTccVex* density1 = nullptr;

	FTccScatter* tcc_scatter2 = nullptr;

	FTccAttribDelete* tcc_attrib_delete2 = nullptr;

	FTccVex* transform_and_id1 = nullptr;

	FTccInstancer* tcc_instancer2 = nullptr;

	FTccMerge* tcc_merge5 = nullptr;

};

