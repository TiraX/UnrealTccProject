// Auto generated by UnrealTcc. 

#include "TcrTreeSkinGrowth.h"
#include "Generated/TccTemplates.h"
#include "TccForBlock.h"
#include "TccSwitch.h"
#include "TctTexVex.h"
#include "TccAttribute.h"
#include "TccGeometry.h"
#include "Vex.h"
#include "HScript.h"

 UTcrTreeSkinGrowth::UTcrTreeSkinGrowth() 
{
}
FTccNodePtr UTcrTreeSkinGrowth::CreateNode() 
{
	TSharedPtr<FTcrTreeSkinGrowth> Node = MakeShared<FTcrTreeSkinGrowth>();
	SyncParams(Node);
	return Node;
}
void UTcrTreeSkinGrowth::SyncParams(FTccNodePtr InNode) 
{
	TSharedPtr<FTcrTreeSkinGrowth> Node = StaticCastSharedPtr<FTcrTreeSkinGrowth>(InNode);
	Node->Cols = Cols;
	Node->Amp = Amp;
	Node->PosScale = PosScale;
	Node->Incroll = Incroll;
}

 FTcrTreeSkinGrowth::FTcrTreeSkinGrowth() 
{
	InitInputsCount(1);
	tcc_poly_wire1 = new FTccPolyWire();
	tcc_poly_wire1->InitMultiRefs(false); // RefCount = 1
	tcc_attrib_delete1 = new FTccAttribDelete();
	tcc_attrib_delete1->InitMultiRefs(false); // RefCount = 1
}
 FTcrTreeSkinGrowth::~FTcrTreeSkinGrowth() 
{
	delete tcc_poly_wire1; 
	delete tcc_attrib_delete1; 
}
void FTcrTreeSkinGrowth::Cook() 
{
	{
		// Node: tcc_poly_wire1
		tcc_poly_wire1->SetInput(0, GetInput(0));
		tcc_poly_wire1->EnableRadiusAttrib = 1;
		tcc_poly_wire1->RAttrib = TEXT("radius");
		tcc_poly_wire1->Divs = int32(Cols);
		tcc_poly_wire1->DoUv = 1;
		tcc_poly_wire1->Cook();
	}
	{
		// Node: tcc_attrib_delete1
		tcc_attrib_delete1->SetInput(0, tcc_poly_wire1);
		tcc_attrib_delete1->Ptdel = TEXT("*");
		tcc_attrib_delete1->Primdel = TEXT("*");
		tcc_attrib_delete1->Cook();
	}
	SetGeoResult(UTcrTreeSkinGrowth::output0, tcc_attrib_delete1->GetGeoResult(0));
}

