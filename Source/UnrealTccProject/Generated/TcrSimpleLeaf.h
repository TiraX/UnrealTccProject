// Auto generated by UnrealTcc. 

#pragma once

#include "CoreMinimal.h"
#include "TccNode.h"
#include "TccRecipeDefine.h"
#include "TccRamp.h"
#include "TcrSimpleLeaf.generated.h"

UCLASS()
class UNREALTCCPROJECT_API UTcrSimpleLeaf : public UTccRecipeDefine
{
	GENERATED_BODY()
public:
	enum EOutputs
	{
		output0,  // From rename_fmuv_to_uv
		OUT_Count,
	};

	const FString SOutputs[OUT_Count] = 
	{
		TEXT("output0"),
	};

	UTcrSimpleLeaf() ;

	virtual FTccNodePtr CreateNode() override;
	virtual void SyncParams(FTccNodePtr InNode) override;

	// Shape
	UPROPERTY(EditAnywhere)
	FTccRampFloat Shape = ETccRampInterp::Linear;

	// Size
	UPROPERTY(EditAnywhere)
	FVector2f Size = FVector2f(0.500000f, 0.500000f);

	// Rows
	UPROPERTY(EditAnywhere)
	int32 Rows = 6;

	// Columns
	UPROPERTY(EditAnywhere)
	int32 Cols = 5;

	// Enable Bend
	UPROPERTY(EditAnywhere)
	int32 EnableBend = 1;

	// Bend
	UPROPERTY(EditAnywhere)
	float Bend = -30.000000f;

	// Enable Curl
	UPROPERTY(EditAnywhere)
	int32 EnableCurl = 1;

	// Curl
	UPROPERTY(EditAnywhere)
	float Curl = -60.000000f;

};

class FTccGrid;
class FTccVex;
class FTccSwitch;
class FTccBend;
class FTccAttribPromote;
class FTccAttribRename;
class UNREALTCCPROJECT_API FTcrSimpleLeaf : public FTccNode
{
public:
	FTcrSimpleLeaf() ;
	virtual ~FTcrSimpleLeaf() ;

	virtual void Cook() override;

	// Shape
	FTccRampFloat Shape = ETccRampInterp::Linear;

	// Size
	FVector2f Size = FVector2f(0.500000f, 0.500000f);

	// Rows
	int32 Rows = 6;

	// Columns
	int32 Cols = 5;

	// Enable Bend
	int32 EnableBend = 1;

	// Bend
	float Bend = -30.000000f;

	// Enable Curl
	int32 EnableCurl = 1;

	// Curl
	float Curl = -60.000000f;

	FTccGrid* tcc_grid1 = nullptr;

	FTccVex* leaf_shape3 = nullptr;

	FTccSwitch* enable_bend = nullptr;

	FTccBend* bend_z = nullptr;

	FTccSwitch* enable_curl = nullptr;

	FTccBend* bend_l = nullptr;

	FTccAttribPromote* uv_to_vertices = nullptr;

	FTccAttribRename* rename_fmuv_to_uv = nullptr;

};

