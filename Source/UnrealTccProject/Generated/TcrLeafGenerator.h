// Auto generated by UnrealTcc. 

#pragma once

#include "CoreMinimal.h"
#include "TccNode.h"
#include "TccRecipeDefine.h"
#include "TccRamp.h"
#include "TcrLeafGenerator.generated.h"

UCLASS()
class UNREALTCCPROJECT_API UTcrLeafGenerator : public UTccRecipeDefine
{
	GENERATED_BODY()
public:
	enum EOutputs
	{
		output0,  // From foreach_branch
		OUT_Count,
	};

	const FString SOutputs[OUT_Count] = 
	{
		TEXT("output0"),
	};

	UTcrLeafGenerator() ;

	virtual FTccNodePtr CreateNode() override;
	virtual void SyncParams(FTccNodePtr InNode) override;

	// Scale Along Curve
	UPROPERTY(EditAnywhere)
	FTccRampFloat ScaleRamp = ETccRampInterp::Linear;

	// Scale Along Height
	UPROPERTY(EditAnywhere)
	FTccRampFloat ScaleRampH = ETccRampInterp::Linear;

	// Seed
	UPROPERTY(EditAnywhere)
	int32 BranchSeed = 0;

	// Force Total Count
	UPROPERTY(EditAnywhere)
	int32 Npts = 10;

	// Resample
	UPROPERTY(EditAnywhere)
	int32 UseResample = 0;

	// Grow Range
	UPROPERTY(EditAnywhere)
	FVector2f Gpercent = FVector2f(0.200000f, 1.000000f);

	// Mirror
	UPROPERTY(EditAnywhere)
	int32 Mirror = 1;

	// Yaw Range
	UPROPERTY(EditAnywhere)
	FVector2f YawRange = FVector2f(-30.000000f, 45.000000f);

	// Pitch
	UPROPERTY(EditAnywhere)
	float Pitch = 0.000000f;

	// Pitch Random
	UPROPERTY(EditAnywhere)
	float PitchRand = 0.000000f;

	// Roll
	UPROPERTY(EditAnywhere)
	float Roll = 0.000000f;

	// Scale
	UPROPERTY(EditAnywhere)
	FVector2f Scale = FVector2f(1.000000f, 1.000000f);

	// Enable Scale Along Curve
	UPROPERTY(EditAnywhere)
	int32 EnableScaleCurve = 1;

	// Enable Scale Along Height
	UPROPERTY(EditAnywhere)
	int32 EnableScaleHeight = 0;

	// Height Range
	UPROPERTY(EditAnywhere)
	FVector2f HeightRange = FVector2f(1.000000f, 2.000000f);

};

class FTccBlastByFeature;
class FTccForBlock;
class FTccVex;
class FTccSwitch;
class FTccScatter;
class FTccAttribDelete;
class FTccSort;
class FTccResample;
class FTccAttribPromote;
class FTccMerge;
class FTccInstancer;
class UNREALTCCPROJECT_API FTcrLeafGenerator : public FTccNode
{
public:
	FTcrLeafGenerator() ;
	virtual ~FTcrLeafGenerator() ;

	virtual void Cook() override;

	// Scale Along Curve
	FTccRampFloat ScaleRamp = ETccRampInterp::Linear;

	// Scale Along Height
	FTccRampFloat ScaleRampH = ETccRampInterp::Linear;

	// Seed
	int32 BranchSeed = 0;

	// Force Total Count
	int32 Npts = 10;

	// Resample
	int32 UseResample = 0;

	// Grow Range
	FVector2f Gpercent = FVector2f(0.200000f, 1.000000f);

	// Mirror
	int32 Mirror = 1;

	// Yaw Range
	FVector2f YawRange = FVector2f(-30.000000f, 45.000000f);

	// Pitch
	float Pitch = 0.000000f;

	// Pitch Random
	float PitchRand = 0.000000f;

	// Roll
	float Roll = 0.000000f;

	// Scale
	FVector2f Scale = FVector2f(1.000000f, 1.000000f);

	// Enable Scale Along Curve
	int32 EnableScaleCurve = 1;

	// Enable Scale Along Height
	int32 EnableScaleHeight = 0;

	// Height Range
	FVector2f HeightRange = FVector2f(1.000000f, 2.000000f);

	FTccBlastByFeature* tcc_blast_by_feature1 = nullptr;

	FTccForBlock* foreach_branch = nullptr;

	FTccVex* add_density = nullptr;

	FTccSwitch* use_resample = nullptr;

	FTccScatter* tcc_scatter3 = nullptr;

	FTccAttribDelete* delete_density = nullptr;

	FTccSort* tcc_sort1 = nullptr;

	FTccVex* calc_real_points = nullptr;

	FTccResample* tcc_resample1 = nullptr;

	FTccBlastByFeature* tcc_blast_by_feature2 = nullptr;

	FTccAttribDelete* delete_density1 = nullptr;

	FTccAttribPromote* min_max_u = nullptr;

	FTccSwitch* enable_mirror = nullptr;

	FTccVex* default_dir = nullptr;

	FTccVex* mirror_dir_pos = nullptr;

	FTccVex* mirror_dir_neg = nullptr;

	FTccMerge* tcc_merge1 = nullptr;

	FTccVex* calc_rotation1 = nullptr;

	FTccAttribDelete* tcc_attrib_delete1 = nullptr;

	FTccVex* apply_scale = nullptr;

	FTccInstancer* tcc_instancer1 = nullptr;

};

